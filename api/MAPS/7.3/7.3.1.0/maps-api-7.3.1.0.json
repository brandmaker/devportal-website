{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "MaPS rest api 3.11.1-7.3 API specification",
    "description" : "<div>Relative Path : maps/rest </div>\n<br>\n<p>Used HTTP Status codes: </p>\n    \t\n<ul>\n\t<li>200 - OK, when request is executed successfully</li>\n\t<li>201 - When resource is created successfully with POST/PUT request</li>\n\t<li>400 - Parameters are missing or incorrect</li>\n\t<li>401 - Unauthorized request - not authenticated or expired token</li>\n  \t<li>403 - User has no rights</li>\n  \t<li>404 - Requested resource not found</li>\n  \t<li>409 - Validation error</li>\n  \t<li>500 - Unexpected server error</li>\n</ul>",
    "version" : "3.11.1-7.3"
  },
  "servers" : [ {
    "url" : "https://is-dev2.brandmaker.com"
  }, {
    "url" : "/"
  } ],
  "security" : [ {
    "jwtScheme" : [ ]
  }, {
    "basicScheme" : [ ]
  }, {
    "cookieScheme" : [ ]
  } ],
  "tags" : [ {
    "name" : "AttachmentRestApi",
    "description" : "Created by alexander.yordanov on 2017-10-20."
  }, {
    "name" : "BasicSearchRestApi"
  }, {
    "name" : "BudgetLockRestApi",
    "description" : "Provide information for locked month and year budgets"
  }, {
    "name" : "BudgetRestApi"
  }, {
    "name" : "BudgetSetRestApi",
    "description" : "Created by alexander.yordanov on 2019-04-10."
  }, {
    "name" : "CategoryRestApi"
  }, {
    "name" : "ContentRestApi",
    "description" : "Created by alexander.yordanov on 2018-01-23."
  }, {
    "name" : "CurrencyRestApi"
  }, {
    "name" : "DimensionRestApi"
  }, {
    "name" : "DimensionValueRestApi"
  }, {
    "name" : "ExchangeRateRestApi"
  }, {
    "name" : "FeeRestApi"
  }, {
    "name" : "FeeValueRestApi"
  }, {
    "name" : "GroupRestApi"
  }, {
    "name" : "InvoiceRestApi"
  }, {
    "name" : "KpiDefinitionRestApi"
  }, {
    "name" : "KpiRestApi"
  }, {
    "name" : "MDFRestApi"
  }, {
    "name" : "ManagedTaskRestApi"
  }, {
    "name" : "MarkerRestApi"
  }, {
    "name" : "MarkerTypeRestApi",
    "description" : "Created by alexander.yordanov on 2019-07-09."
  }, {
    "name" : "ModuleRestApi"
  }, {
    "name" : "NodeCommentRestApi"
  }, {
    "name" : "NodeRestApi"
  }, {
    "name" : "NodeTypeRestApi"
  }, {
    "name" : "PeriodRestApi"
  }, {
    "name" : "PermissionRestApi"
  }, {
    "name" : "PlannedMonthBudgetRestApi",
    "description" : "Created by alexander.yordanov on 2021-02-16."
  }, {
    "name" : "PlannedYearBudgetRestApi",
    "description" : "Created by alexander.yordanov on 2021-02-16."
  }, {
    "name" : "SunkCostRestApi"
  }, {
    "name" : "TargetBudgetRestApi"
  }, {
    "name" : "TargetYearBudgetRestApi",
    "description" : "Created by alexander.yordanov on 2021-02-16."
  }, {
    "name" : "TaskRestApi"
  }, {
    "name" : "TreeRestApi"
  }, {
    "name" : "UserApproversRestApi"
  }, {
    "name" : "UserGroupsRestApi"
  }, {
    "name" : "UserRestApi"
  }, {
    "name" : "ViewRestApi"
  }, {
    "name" : "WatcherRestApi",
    "description" : "Created by alexander.yordanov on 2019-10-25."
  } ],
  "paths" : {
    "/maps/rest/api/{version}/attachment/externalIds" : {
      "post" : {
        "tags" : [ "AttachmentRestApi" ],
        "description" : "\n\n__Available Since:__ 1.1",
        "operationId" : "AttachmentRestApi-POST_getAttachmentsByExternalId",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "list of externalIds",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "W2P attachments that are attached, filtered list of external ids that are attached",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/attachment/{attachmentId}" : {
      "get" : {
        "tags" : [ "AttachmentRestApi" ],
        "description" : "\n\n__Available Since:__ 1.1",
        "operationId" : "AttachmentRestApi-GET_getAttachmentById",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "attachmentId to search",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "found attachment",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentDTO"
                },
                "example" : "{\n  \"attachmentLink\" : \"...\",\n  \"annexAttachmentId\" : 12345,\n  \"attachmentDate\" : \"...\",\n  \"attachmentFileName\" : \"...\",\n  \"comment\" : \"...\",\n  \"externalId\" : 12345,\n  \"fileSize\" : 12345,\n  \"source\" : \"...\",\n  \"urlId\" : \"...\"\n}"
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "AttachmentRestApi" ],
        "description" : "\n\n__Available Since:__ 1.1",
        "operationId" : "AttachmentRestApi-DELETE_deleteAttachment",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "attachment to delete",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/attachment/bill/{billId}" : {
      "get" : {
        "tags" : [ "AttachmentRestApi" ],
        "description" : "Returns attachments of given Bill(Invoice)\n\nREAD_BILLS rights is checked instead of READ_ATTACHMENTS, because of the attachment is associated with bill\n\n__Available Since:__ 3.9",
        "operationId" : "AttachmentRestApi-GET_getAttachmentsOfBill",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "billId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AttachmentDTO"
                  }
                },
                "example" : "[ {\n  \"attachmentLink\" : \"...\",\n  \"annexAttachmentId\" : 12345,\n  \"attachmentDate\" : \"...\",\n  \"attachmentFileName\" : \"...\",\n  \"comment\" : \"...\",\n  \"externalId\" : 12345,\n  \"fileSize\" : 12345,\n  \"source\" : \"...\",\n  \"urlId\" : \"...\"\n} ]"
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/maps/rest/api/{version}/attachment/content/{attachmentId}" : {
      "get" : {
        "tags" : [ "AttachmentRestApi" ],
        "description" : "\n\n__Available Since:__ 2.0",
        "operationId" : "AttachmentRestApi-GET_hasContent",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "attachment to check",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "true if given attachment is used in content, false otherwise",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/attachment/download/{attachmentId}" : {
      "get" : {
        "tags" : [ "AttachmentRestApi" ],
        "description" : "\n\n__Available Since:__ 1.1",
        "operationId" : "AttachmentRestApi-GET_downloadAttachment",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "attachment to download",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/attachment/invoice/{invoiceId}" : {
      "get" : {
        "tags" : [ "AttachmentRestApi" ],
        "description" : "Returns attachments of given Invoice\n\nREAD_BILLS rights is checked instead of READ_ATTACHMENTS, because of the attachment is associated with invoice\n\n__Available Since:__ 3.9",
        "operationId" : "AttachmentRestApi-GET_getAttachmentsOfInvoice",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceId",
          "in" : "path",
          "description" : "(Integer) ID of the Invoice",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Collection of AttachmentDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AttachmentDTO"
                  }
                },
                "example" : "[ {\n  \"attachmentLink\" : \"...\",\n  \"annexAttachmentId\" : 12345,\n  \"attachmentDate\" : \"...\",\n  \"attachmentFileName\" : \"...\",\n  \"comment\" : \"...\",\n  \"externalId\" : 12345,\n  \"fileSize\" : 12345,\n  \"source\" : \"...\",\n  \"urlId\" : \"...\"\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/attachment/node/{nodeId}" : {
      "get" : {
        "tags" : [ "AttachmentRestApi" ],
        "description" : "\n\n__Available Since:__ 1.1",
        "operationId" : "AttachmentRestApi-GET_getAttachmentsForNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "nodeId for which to get attachments",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "for paging",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>AttachmentDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentsPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"attachmentLink\" : \"...\",\n    \"annexAttachmentId\" : 12345,\n    \"attachmentDate\" : \"...\",\n    \"attachmentFileName\" : \"...\",\n    \"comment\" : \"...\",\n    \"externalId\" : 12345,\n    \"fileSize\" : 12345,\n    \"source\" : \"...\",\n    \"urlId\" : \"...\"\n  }, {\n    \"attachmentLink\" : \"...\",\n    \"annexAttachmentId\" : 12345,\n    \"attachmentDate\" : \"...\",\n    \"attachmentFileName\" : \"...\",\n    \"comment\" : \"...\",\n    \"externalId\" : 12345,\n    \"fileSize\" : 12345,\n    \"source\" : \"...\",\n    \"urlId\" : \"...\"\n  } ],\n  \"@type\" : \"attachment\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "AttachmentRestApi" ],
        "description" : "\n\n__Available Since:__ 1.1",
        "operationId" : "AttachmentRestApi-POST_createAttachment",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "id of node to make the attachment",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/mixed" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "attachment" : {
                    "$ref" : "#/components/schemas/AttachmentRequestBody"
                  },
                  "file" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/attachment/sunk-cost/{sunkCostId}" : {
      "get" : {
        "tags" : [ "AttachmentRestApi" ],
        "description" : "Returns attachments of given Sunk Cost(PO)\n\nREAD_SUNK_COSTS rights is checked instead of READ_ATTACHMENTS, because of the attachment is associated with PO\n\n__Available Since:__ 3.9",
        "operationId" : "AttachmentRestApi-GET_getAttachmentsOfSunkCost",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sunkCostId",
          "in" : "path",
          "description" : "(Integer) ID of the Sunk Cost(PO)",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Collection of AttachmentDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AttachmentDTO"
                  }
                },
                "example" : "[ {\n  \"attachmentLink\" : \"...\",\n  \"annexAttachmentId\" : 12345,\n  \"attachmentDate\" : \"...\",\n  \"attachmentFileName\" : \"...\",\n  \"comment\" : \"...\",\n  \"externalId\" : 12345,\n  \"fileSize\" : 12345,\n  \"source\" : \"...\",\n  \"urlId\" : \"...\"\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/attachment/unlink/{attachmentId}" : {
      "delete" : {
        "tags" : [ "AttachmentRestApi" ],
        "description" : "\n\n__Available Since:__ 1.1",
        "operationId" : "AttachmentRestApi-DELETE_unlinkAttachment",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "attachment to unlink (from invoice or sunk cost)",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/attachment/bill/node/{nodeId}" : {
      "get" : {
        "tags" : [ "AttachmentRestApi" ],
        "description" : "\n\n__Available Since:__ 1.1",
        "operationId" : "AttachmentRestApi-GET_getAttachmentsForBills",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "nodeId for which to get attachments",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "for paging",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>AttachmentDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentsPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"attachmentLink\" : \"...\",\n    \"annexAttachmentId\" : 12345,\n    \"attachmentDate\" : \"...\",\n    \"attachmentFileName\" : \"...\",\n    \"comment\" : \"...\",\n    \"externalId\" : 12345,\n    \"fileSize\" : 12345,\n    \"source\" : \"...\",\n    \"urlId\" : \"...\"\n  }, {\n    \"attachmentLink\" : \"...\",\n    \"annexAttachmentId\" : 12345,\n    \"attachmentDate\" : \"...\",\n    \"attachmentFileName\" : \"...\",\n    \"comment\" : \"...\",\n    \"externalId\" : 12345,\n    \"fileSize\" : 12345,\n    \"source\" : \"...\",\n    \"urlId\" : \"...\"\n  } ],\n  \"@type\" : \"attachment\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  } ]\n}"
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/maps/rest/api/{version}/attachment/sunk-cost/node/{nodeId}" : {
      "get" : {
        "tags" : [ "AttachmentRestApi" ],
        "description" : "\n\n__Available Since:__ 1.1",
        "operationId" : "AttachmentRestApi-GET_getAttachmentsForSunkCosts",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "nodeId for which to get attachments",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "for paging",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>AttachmentDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AttachmentsPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"attachmentLink\" : \"...\",\n    \"annexAttachmentId\" : 12345,\n    \"attachmentDate\" : \"...\",\n    \"attachmentFileName\" : \"...\",\n    \"comment\" : \"...\",\n    \"externalId\" : 12345,\n    \"fileSize\" : 12345,\n    \"source\" : \"...\",\n    \"urlId\" : \"...\"\n  }, {\n    \"attachmentLink\" : \"...\",\n    \"annexAttachmentId\" : 12345,\n    \"attachmentDate\" : \"...\",\n    \"attachmentFileName\" : \"...\",\n    \"comment\" : \"...\",\n    \"externalId\" : 12345,\n    \"fileSize\" : 12345,\n    \"source\" : \"...\",\n    \"urlId\" : \"...\"\n  } ],\n  \"@type\" : \"attachment\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/maps/rest/api/{version}/basic-search" : {
      "post" : {
        "tags" : [ "BasicSearchRestApi" ],
        "description" : "Find timelines, tasks, attachments, individual planning\nelements of the tree structure, invoices or sunkcosts in your marketing plan quickly and\neasily.\n\n__Available Since:__ 1.0",
        "operationId" : "BasicSearchRestApi-POST_search",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "page offset (Default: 0)",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "query",
          "in" : "query",
          "description" : "search string, Example values: ?query=campaign",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "withAdditionalInfo",
          "in" : "query",
          "description" : "include addition info (fields) for object with type : NODE",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "request body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SearchCriteriaDTO"
              },
              "example" : "{\n  \"types\" : [ \"TIME_LINE\", \"NODE\" ],\n  \"treeId\" : 16\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Page with SearchResultDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchResultPageDTO"
                },
                "example" : "{\n  \"totalElements\" : 2,\n  \"content\" : [ {\n    \"object\" : {\n      \"id\" : 1398,\n      \"parentId\" : 1397,\n      \"name\" : \"Summer Campaign\",\n      \"startDate\" : \"2014-02-01\",\n      \"endDate\" : \"2021-01-31\",\n      \"nodeType\" : {\n        \"id\" : 1,\n        \"name\" : \"Standard\",\n        \"colour\" : \"000000\",\n        \"backgroundColour\" : \"ffffff\",\n        \"bold\" : false,\n        \"italic\" : false,\n        \"active\" : true,\n        \"editable\" : false,\n        \"icon\" : 0\n      }\n    },\n    \"nodeId\" : 1398,\n    \"type\" : \"NODE\"\n  }, {\n    \"object\" : {\n      \"startDate\" : \"2018-06-17\",\n      \"endDate\" : \"2018-09-23\",\n      \"categoryId\" : 8,\n      \"name\" : \"Campaign\",\n      \"id\" : 485\n    },\n    \"nodeId\" : 1572,\n    \"type\" : \"TIME_LINE\"\n  } ],\n  \"limit\" : 50,\n  \"offset\" : 0\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/budget-lock/{treeId}" : {
      "get" : {
        "tags" : [ "BudgetLockRestApi" ],
        "description" : "Get locked budget periods\n\n__Available Since:__ 3.11",
        "operationId" : "BudgetLockRestApi-GET_getBudgetLocksForTree",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "treeId",
          "in" : "path",
          "description" : "- tree(fiscal year) id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "if year budget is locked and all locked months",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BudgetTreeLock"
                },
                "example" : "{\n  \"yearLocked\" : true,\n  \"lockedMonths\" : [ \"...\", \"...\" ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/budget-lock/{date}/budgetType/{budgetType}" : {
      "get" : {
        "tags" : [ "BudgetLockRestApi" ],
        "description" : "Returns if given period is locked for respective budget\n\n__Available Since:__ 3.11",
        "operationId" : "BudgetLockRestApi-GET_isBudgetLockedForDate",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "budgetType",
          "in" : "path",
          "description" : "- MONTH, YEAR",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "MONTH", "YEAR" ]
          }
        }, {
          "name" : "date",
          "in" : "path",
          "description" : "-   date in format yyyy-MM-dd",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "- response : { \"locked\" : true/false }",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/budget/node/{nodeId}/tree/{treeId}" : {
      "get" : {
        "tags" : [ "BudgetRestApi" ],
        "description" : "Return budget values of months, year, quarter, for planned,committed,actual,projected,remaining,mdf.\n\n__Available Since:__ 1.0",
        "operationId" : "BudgetRestApi-GET_getBudgetColumnValues",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "treeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "calcByRef",
          "in" : "query",
          "description" : "false(default) - calculate by working currency, true - calculate by reference currency",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "field",
          "in" : "query",
          "description" : "available values: month, quarter, year",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "round",
          "in" : "query",
          "description" : "false(default) - don't round values, true - round values",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "scale",
          "in" : "query",
          "description" : "available values NORMAL(default), THOUSANDS, MILLIONS, BILLIONS",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "NORMAL", "THOUSANDS", "MILLIONS", "BILLIONS" ],
            "default" : "NORMAL"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BudgetColumnsDTO"
                },
                "example" : "{\n  \"month\" : {\n    \"planned\" : [ 12345.0, 12345.0 ],\n    \"commited\" : [ 12345.0, 12345.0 ],\n    \"actual\" : [ 12345.0, 12345.0 ],\n    \"projected\" : [ 12345.0, 12345.0 ],\n    \"remainig\" : [ 12345.0, 12345.0 ],\n    \"mdf\" : [ 12345.0, 12345.0 ],\n    \"calculated\" : [ 12345.0, 12345.0 ],\n    \"target\" : [ 12345.0, 12345.0 ]\n  },\n  \"quarter\" : {\n    \"planned\" : [ 12345.0, 12345.0 ],\n    \"commited\" : [ 12345.0, 12345.0 ],\n    \"actual\" : [ 12345.0, 12345.0 ],\n    \"projected\" : [ 12345.0, 12345.0 ],\n    \"remainig\" : [ 12345.0, 12345.0 ],\n    \"mdf\" : [ 12345.0, 12345.0 ],\n    \"calculated\" : [ 12345.0, 12345.0 ],\n    \"target\" : [ 12345.0, 12345.0 ]\n  },\n  \"year\" : {\n    \"planned\" : 12345.0,\n    \"commited\" : 12345.0,\n    \"actual\" : 12345.0,\n    \"projected\" : 12345.0,\n    \"remainig\" : 12345.0,\n    \"mdf\" : 12345.0,\n    \"target\" : 12345.0,\n    \"calculated\" : 12345.0\n  }\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/budget/planned/month/node/{nodeId}/tree/{treeId}" : {
      "put" : {
        "tags" : [ "BudgetRestApi" ],
        "description" : "Edit PLANNED month budget of node for given year.The values are in cent(multiplied by 100). If you want to skip some months send null value, for example \"planned\":[1000, 10000, null, null, null, null, null, null, null, null, null, null]\nwill add value 10 for the first month and 100 for the second\n\n__Available Since:__ 1.0",
        "operationId" : "BudgetRestApi-PUT_editPlannedMonthBudget",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "treeId",
          "in" : "path",
          "description" : "tree id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BMonthDTO"
              },
              "example" : "{\n  \"planned\" : [ 12345.0, 12345.0 ],\n  \"commited\" : [ 12345.0, 12345.0 ],\n  \"actual\" : [ 12345.0, 12345.0 ],\n  \"projected\" : [ 12345.0, 12345.0 ],\n  \"remainig\" : [ 12345.0, 12345.0 ],\n  \"mdf\" : [ 12345.0, 12345.0 ],\n  \"calculated\" : [ 12345.0, 12345.0 ],\n  \"target\" : [ 12345.0, 12345.0 ]\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/budget/planned/year/node/{nodeId}/tree/{treeId}" : {
      "put" : {
        "tags" : [ "BudgetRestApi" ],
        "description" : "Edit PLANNED year budget of node for given year. The values are in cent(multiplied by 100). For example to set 8000, send \"planned\":800000(multiplied by 100)\n\n__Available Since:__ 1.0",
        "operationId" : "BudgetRestApi-PUT_editPlanneYeardBudget",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "treeId",
          "in" : "path",
          "description" : "tree id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BYearDTO"
              },
              "example" : "{\n  \"planned\" : 12345.0,\n  \"commited\" : 12345.0,\n  \"actual\" : 12345.0,\n  \"projected\" : 12345.0,\n  \"remainig\" : 12345.0,\n  \"mdf\" : 12345.0,\n  \"target\" : 12345.0,\n  \"calculated\" : 12345.0\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/budget-set/available" : {
      "get" : {
        "tags" : [ "BudgetSetRestApi" ],
        "description" : "\n\n__Available Since:__ 3.8",
        "operationId" : "BudgetSetRestApi-GET_getAvailableBudgetSetViews",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "budget sets of the current user has access to(private, public, restricted) as Collection of BudgetSetDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BudgetSetDTO"
                  }
                },
                "example" : "[ {\n  \"setId\" : 12345,\n  \"name\" : \"...\",\n  \"currencyView\" : \"WORKING\",\n  \"budgetScale\" : \"BILLIONS\",\n  \"yearSwitch\" : true,\n  \"configurationInfo\" : true,\n  \"rounding\" : true,\n  \"accesType\" : \"PRIVATE_ACCESS\",\n  \"budgetColumns\" : [ {\n    \"id\" : 12345,\n    \"columnType\" : \"EXTERNAL_ID\",\n    \"width\" : 12345,\n    \"order\" : 12345,\n    \"dimensionId\" : 12345,\n    \"activeColumns\" : [ \"REMAINING\", \"ACTUAL\" ],\n    \"formula\" : \"...\",\n    \"positiveFont\" : \"...\",\n    \"negativeFont\" : \"...\",\n    \"positiveBackground\" : \"...\",\n    \"negativeBackground\" : \"...\",\n    \"formulaReadable\" : \"...\"\n  }, {\n    \"id\" : 12345,\n    \"columnType\" : \"ELEMENT_ID\",\n    \"width\" : 12345,\n    \"order\" : 12345,\n    \"dimensionId\" : 12345,\n    \"activeColumns\" : [ \"TARGET_BUDGET\", \"ACTUAL\" ],\n    \"formula\" : \"...\",\n    \"positiveFont\" : \"...\",\n    \"negativeFont\" : \"...\",\n    \"positiveBackground\" : \"...\",\n    \"negativeBackground\" : \"...\",\n    \"formulaReadable\" : \"...\"\n  } ]\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/budget-set/public/all" : {
      "get" : {
        "tags" : [ "BudgetSetRestApi" ],
        "description" : "This method provides a list with basic information about all public budget sets.\n\n__Available Since:__ 3.3",
        "operationId" : "BudgetSetRestApi-GET_getPublicBudgetSetViews",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Collection of all public budget sets as BudgetSetDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BudgetSetDTO"
                  }
                },
                "example" : "[ {\n  \"setId\" : 12345,\n  \"name\" : \"...\",\n  \"currencyView\" : \"WORKING\",\n  \"budgetScale\" : \"NORMAL\",\n  \"yearSwitch\" : true,\n  \"configurationInfo\" : true,\n  \"rounding\" : true,\n  \"accesType\" : \"PRIVATE_ACCESS\",\n  \"budgetColumns\" : [ {\n    \"id\" : 12345,\n    \"columnType\" : \"BUDGET_ANALYSIS\",\n    \"width\" : 12345,\n    \"order\" : 12345,\n    \"dimensionId\" : 12345,\n    \"activeColumns\" : [ \"PLANNED\", \"REMAINING\" ],\n    \"formula\" : \"...\",\n    \"positiveFont\" : \"...\",\n    \"negativeFont\" : \"...\",\n    \"positiveBackground\" : \"...\",\n    \"negativeBackground\" : \"...\",\n    \"formulaReadable\" : \"...\"\n  }, {\n    \"id\" : 12345,\n    \"columnType\" : \"FORMULA\",\n    \"width\" : 12345,\n    \"order\" : 12345,\n    \"dimensionId\" : 12345,\n    \"activeColumns\" : [ \"MDF\", \"PLANNED\" ],\n    \"formula\" : \"...\",\n    \"positiveFont\" : \"...\",\n    \"negativeFont\" : \"...\",\n    \"positiveBackground\" : \"...\",\n    \"negativeBackground\" : \"...\",\n    \"formulaReadable\" : \"...\"\n  } ]\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/category" : {
      "get" : {
        "tags" : [ "CategoryRestApi" ],
        "description" : "This method provides a list with information about all active categories.\n\n__Available Since:__ 1.0",
        "operationId" : "CategoryRestApi-GET_getCategories",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "active categories as List of CategoryDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CategoryDTO"
                  }
                },
                "example" : "[ {\n  \"categoryId\" : 12345,\n  \"name\" : \"...\",\n  \"color\" : \"...\",\n  \"active\" : true\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/category/all" : {
      "get" : {
        "tags" : [ "CategoryRestApi" ],
        "description" : "This method provides a list with information about all categories.\n\n__Available Since:__ 3.4",
        "operationId" : "CategoryRestApi-GET_getAllCategories",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "all categories as List of CategoryDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CategoryDTO"
                  }
                },
                "example" : "[ {\n  \"categoryId\" : 12345,\n  \"name\" : \"...\",\n  \"color\" : \"...\",\n  \"active\" : true\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/category/{categoryId}" : {
      "get" : {
        "tags" : [ "CategoryRestApi" ],
        "description" : "This method provides information about given category id.\n\n__Available Since:__ 1.0",
        "operationId" : "CategoryRestApi-GET_getCategory",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "categoryId",
          "in" : "path",
          "description" : "(Integer) ID of the category.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "CategoryDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CategoryDTO"
                },
                "example" : "{\n  \"categoryId\" : 12345,\n  \"name\" : \"...\",\n  \"color\" : \"...\",\n  \"active\" : true\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/content/slideshow" : {
      "post" : {
        "tags" : [ "ContentRestApi" ],
        "operationId" : "ContentRestApi-POST_getSlideshowHtml",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "- object containing:\nslideshowElements - list of elements for the slideshow contining url, title and isVideo flag\nwidth - width for the slideshow - can have % at the end\nheight - height for the slideshow - can have % at the end",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SlideshowDTO"
              },
              "example" : "{\n  \"slideshowElements\" : [ {\n    \"url\" : \"...\",\n    \"title\" : \"...\",\n    \"video\" : true,\n    \"stretched\" : true\n  }, {\n    \"url\" : \"...\",\n    \"title\" : \"...\",\n    \"video\" : true,\n    \"stretched\" : true\n  } ],\n  \"width\" : \"...\",\n  \"height\" : \"...\"\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "the generated HTML for the slideshow",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/content/{periodId}" : {
      "get" : {
        "tags" : [ "ContentRestApi" ],
        "description" : "Find content\n\n__Available Since:__ 2.0",
        "operationId" : "ContentRestApi-GET_getContent",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "periodId",
          "in" : "path",
          "description" : "- period id for which to find content",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "- content details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnexContentDTO"
                },
                "example" : "{\n  \"contentId\" : 12345,\n  \"text\" : \"...\",\n  \"published\" : true\n}"
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ContentRestApi" ],
        "description" : "Delete content\n\n__Available Since:__ 2.0",
        "operationId" : "ContentRestApi-DELETE_deleteContent",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "periodId",
          "in" : "path",
          "description" : "- period id for which to delete content",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/content/node/{nodeId}" : {
      "get" : {
        "tags" : [ "ContentRestApi" ],
        "description" : "Get node's rich text content\n\n__Available Since:__ 3.0",
        "operationId" : "ContentRestApi-GET_getNodeContent",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "- node id for which to get content",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "content details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnexContentDTO"
                },
                "example" : "{\n  \"contentId\" : 12345,\n  \"text\" : \"...\",\n  \"published\" : true\n}"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "ContentRestApi" ],
        "description" : "Create or update content",
        "operationId" : "ContentRestApi-POST_createUpdateNodeContent",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node of the content",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "content text",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnnexContentDTO"
              },
              "example" : "{\n  \"contentId\" : 12345,\n  \"text\" : \"...\",\n  \"published\" : true\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "updated/created contet",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnexContentDTO"
                },
                "example" : "{\n  \"contentId\" : 12345,\n  \"text\" : \"...\",\n  \"published\" : true\n}"
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ContentRestApi" ],
        "description" : "Delete content of the node",
        "operationId" : "ContentRestApi-DELETE_deleteNodeContent",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the node element",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/content/period/{periodId}" : {
      "post" : {
        "tags" : [ "ContentRestApi" ],
        "description" : "Create/Update content\n\n__Available Since:__ 2.0",
        "operationId" : "ContentRestApi-POST_createUpdateContent",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "periodId",
          "in" : "path",
          "description" : "- id of period for which this content will be",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "- content details",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnnexContentDTO"
              },
              "example" : "{\n  \"contentId\" : 12345,\n  \"text\" : \"...\",\n  \"published\" : true\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "- newly created/updated content details",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnexContentDTO"
                },
                "example" : "{\n  \"contentId\" : 12345,\n  \"text\" : \"...\",\n  \"published\" : true\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/content/slideshow/url" : {
      "get" : {
        "tags" : [ "ContentRestApi" ],
        "operationId" : "ContentRestApi-GET_getSlideshowCssPath",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "the path to the slideshow css needed for correct display of the slideshow",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/currency" : {
      "get" : {
        "tags" : [ "CurrencyRestApi" ],
        "description" : "This method provides a list with information about all defined currencies.\n\n__Available Since:__ 1.0",
        "operationId" : "CurrencyRestApi-GET_getAllCurrencies",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "all currencies as List of CurrencyDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CurrencyDTO"
                  }
                },
                "example" : "[ {\n  \"id\" : 12345,\n  \"shortName\" : \"...\",\n  \"symbol\" : \"...\"\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/dimension" : {
      "get" : {
        "tags" : [ "DimensionRestApi" ],
        "description" : "This method provides a list with information about all defined dimensions.\n\n<b>Type Description</b>\n\n- SELECTABLE_DIMENSION_TYPE Dimension is from type “Single Selection”.\n- M_SELECTABLE_DIMENSION_TYPE Dimension is from type “Multi Selection”.\n- MW_SELECTABLE_DIMENSION_TYPE Dimension is from type “Weighted Multi Selection”.\n- STRUCTURED_TEXT_DIMENSION_TYPE Dimension is from type “Structured Text”.\n- TEXT_DIMENSION_TYPE Dimension is from type “Free Value”.\n- CONTINUES_TEXT_DIMENSION_TYPE Dimension is from type “Continues Text”.\n\n__Available Since:__ 1.0",
        "operationId" : "DimensionRestApi-GET_getDimensions",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeArchived",
          "in" : "query",
          "description" : "If it is required to include the archived dimensions into the response, then set this parameter to true.",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of DimensionDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DimensionDTO"
                  }
                },
                "example" : "[ {\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"info\" : \"...\",\n  \"type\" : \"M_SELECTABLE_DIMENSION_TYPE\",\n  \"readOnly\" : true,\n  \"required\" : true,\n  \"copyable\" : true,\n  \"inheritable\" : true,\n  \"archived\" : true,\n  \"quickFilter\" : true\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/dimension/{id}" : {
      "get" : {
        "tags" : [ "DimensionRestApi" ],
        "description" : "This method provides a list with information about specific dimension.\n\n__Available Since:__ 1.0",
        "operationId" : "DimensionRestApi-GET_getDimension",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the dimension.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "DimensionDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DimensionDTO"
                },
                "example" : "{\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"info\" : \"...\",\n  \"type\" : \"TEXT_DIMENSION_TYPE\",\n  \"readOnly\" : true,\n  \"required\" : true,\n  \"copyable\" : true,\n  \"inheritable\" : true,\n  \"archived\" : true,\n  \"quickFilter\" : true\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "DimensionRestApi" ],
        "description" : "This method updates a specific dimension.\n\n<pre>\n - name (required) (string) Dimension name.\n - archived (optional) (boolean) true or false\n - copyable (optional) (boolean) true ro false\n - info (optional) (string) Additional information to dimension.\n - type (required) (string) Define the dimension type. Example values: SELECTABLE_DIMENSION_TYPE\n - inheritable (optional) (boolean) true or false\n - required (optional) (boolean) true or false\n - readOnly (optional) (boolean) true or false\n </pre>\n\n__Available Since:__ 1.0",
        "operationId" : "DimensionRestApi-PUT_editDimension",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the dimension.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "DimensionDTO",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DimensionDTO"
              },
              "example" : "{\n  \"name\" : \"Assortment\",\n  \"info\" : \"Infotext\",\n  \"type\" : \"M_SELECTABLE_DIMENSION_TYPE\",\n  \"readOnly\" : false,\n  \"required\" : true,\n  \"copyable\" : false,\n  \"inheritable\" : true,\n  \"archived\" : false\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/dimension/{id}/possible-values" : {
      "get" : {
        "tags" : [ "DimensionRestApi" ],
        "description" : "This method provides a list with possible values for a given dimension.\n\nNote that this method cannot be used for free text, continues text or structured dimensions.\n\n__Available Since:__ 1.0",
        "operationId" : "DimensionRestApi-GET_getDimensionValues",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the dimension.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of DimensionPossibleValueDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DimensionPossibleValueDTO"
                  }
                },
                "example" : "[ {\n  \"parentValueId\" : 12345,\n  \"valueId\" : 12345,\n  \"value\" : \"...\"\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/dimension/node/{nodeId}" : {
      "get" : {
        "tags" : [ "DimensionValueRestApi" ],
        "description" : "Return all dimension values for given node.\n\n__Available Since:__ 1.0",
        "operationId" : "DimensionValueRestApi-GET_getDimensionsWithValuesForNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the element.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "dimensionType",
          "in" : "query",
          "description" : "not required, if presented then returns only values for the dimension type",
          "schema" : {
            "type" : "string",
            "enum" : [ "TEXT_DIMENSION_TYPE", "M_SELECTABLE_DIMENSION_TYPE", "SELECTABLE_DIMENSION_TYPE", "MW_SELECTABLE_DIMENSION_TYPE", "STRUCTURED_TEXT_DIMENSION_TYPE", "CONTINUES_TEXT_DIMENSION_TYPE" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of DimensionNodeValueDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DimensionNodeValueDTO"
                  }
                },
                "example" : "[ {\n  \"dimensionId\" : 12345,\n  \"dimensionType\" : \"MW_SELECTABLE_DIMENSION_TYPE\",\n  \"values\" : [ {\n    \"value\" : \"...\",\n    \"weight\" : 12345.0,\n    \"id\" : 12345,\n    \"inherited\" : true\n  }, {\n    \"value\" : \"...\",\n    \"weight\" : 12345.0,\n    \"id\" : 12345,\n    \"inherited\" : true\n  } ]\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/dimension/{dimId}/node/{nodeId}" : {
      "get" : {
        "tags" : [ "DimensionValueRestApi" ],
        "description" : "This method provides a list with objects containing weight and defined value for the\nrequested dimension of a given element.\n\n__Available Since:__ 1.0",
        "operationId" : "DimensionValueRestApi-GET_getDimensionValueForNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dimId",
          "in" : "path",
          "description" : "ID of the dimension.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the element.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of DimensionValueDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/DimensionValueDTO"
                  }
                },
                "example" : "[ {\n  \"value\" : \"...\",\n  \"weight\" : 12345.0,\n  \"id\" : 12345,\n  \"inherited\" : true\n} ]"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "DimensionValueRestApi" ],
        "description" : "Set dimension values for node. If node has already previously added values, they will be deleted.<br/>\nTo remove values should send empty array <code>[]</code>.\nIf the dimension is mark as 'required' and try to remove all values, http error with status 400 will be return.<br/>\nTo update 'selectable' type dimensions (single, multi) 'id' field will be used, for 'text' type dimensions\n(text, structured and continuous) 'value' field will be used.<br/>\nFor 'multi weight selectable' dimension type, fields 'id' and 'weight' will be used to update dimension.\n\n__Available Since:__ 1.0",
        "operationId" : "DimensionValueRestApi-PUT_editDimensionNodeValues",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dimId",
          "in" : "path",
          "description" : "ID of the dimension.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the element.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Should be an array of DimensionValue",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DimensionValueDTO"
                }
              },
              "example" : "[ {\n  \"value\" : \"...\",\n  \"weight\" : 12345.0,\n  \"id\" : 12345,\n  \"inherited\" : true\n} ]"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/exchange-rate/tree/{treeId}" : {
      "get" : {
        "tags" : [ "ExchangeRateRestApi" ],
        "description" : "Returns exchange rates for given year and month\n\n__Available Since:__ 3.8",
        "operationId" : "ExchangeRateRestApi-GET_getRates",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "treeId",
          "in" : "path",
          "description" : "- year id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "month",
          "in" : "query",
          "description" : "- required",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER" ]
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>ExchangeRateDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExchangeRatePageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"id\" : 12345,\n    \"currencyId\" : 12345,\n    \"referenceCurrencyId\" : 12345,\n    \"exchangeRate\" : 12345.0,\n    \"secondExchangeRate\" : 12345.0,\n    \"units\" : 12345\n  }, {\n    \"id\" : 12345,\n    \"currencyId\" : 12345,\n    \"referenceCurrencyId\" : 12345,\n    \"exchangeRate\" : 12345.0,\n    \"secondExchangeRate\" : 12345.0,\n    \"units\" : 12345\n  } ],\n  \"@type\" : \"exchange-rate\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/exchange-rate/tree/{treeId}/currency/{currencyId}" : {
      "get" : {
        "tags" : [ "ExchangeRateRestApi" ],
        "description" : "\n\n__Available Since:__ 1.0",
        "operationId" : "ExchangeRateRestApi-GET_getExchangeRates",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "currencyId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "treeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ExchangeRateDTO"
                  }
                },
                "example" : "[ {\n  \"id\" : 12345,\n  \"currencyId\" : 12345,\n  \"referenceCurrencyId\" : 12345,\n  \"exchangeRate\" : 12345.0,\n  \"secondExchangeRate\" : 12345.0,\n  \"units\" : 12345\n} ]"
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/maps/rest/api/{version}/fee" : {
      "get" : {
        "tags" : [ "FeeRestApi" ],
        "description" : "\n\n__Available Since:__ 3.6",
        "operationId" : "FeeRestApi-GET_getFees",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>FeeDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeePageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"type\" : \"ABSOLUTE\"\n  }, {\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"type\" : \"ABSOLUTE\"\n  } ],\n  \"@type\" : \"fee\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  } ]\n}"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "FeeRestApi" ],
        "description" : "Create a fee. For correct fee types use \"/fee/type\"\n\n__Available Since:__ 3.6",
        "operationId" : "FeeRestApi-POST_createFee",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FeeDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"type\" : \"ABSOLUTE\"\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/fee/type" : {
      "get" : {
        "tags" : [ "FeeRestApi" ],
        "description" : "\n\n__Available Since:__ 3.6",
        "operationId" : "FeeRestApi-GET_getFeeTypes",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FeeType"
                  }
                },
                "example" : "..."
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/fee/{feeId}" : {
      "get" : {
        "tags" : [ "FeeRestApi" ],
        "description" : "\n\n__Available Since:__ 3.6",
        "operationId" : "FeeRestApi-GET_getFee",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeeDTO"
                },
                "example" : "{\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"type\" : \"PERCENT\"\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "FeeRestApi" ],
        "description" : "Edit a fee. For correct fee types use \"/fee/type\"\n\n__Available Since:__ 3.6",
        "operationId" : "FeeRestApi-PUT_editFee",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FeeDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"type\" : \"PERCENT\"\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "FeeRestApi" ],
        "description" : "\n\n__Available Since:__ 3.6",
        "operationId" : "FeeRestApi-DELETE_deleteFee",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/fee-rate/{rateId}" : {
      "get" : {
        "tags" : [ "FeeRestApi" ],
        "description" : "\n\n__Available Since:__ 3.6",
        "operationId" : "FeeRestApi-GET_getFeeRate",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rateId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeeRateDTO"
                },
                "example" : "{\n  \"id\" : 12345,\n  \"feeId\" : 12345,\n  \"startDate\" : \"...\",\n  \"rate\" : 12345.0\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "FeeRestApi" ],
        "description" : "Edit fee rate\n\n__Available Since:__ 3.6",
        "operationId" : "FeeRestApi-PUT_editFeeRate",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rateId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FeeRateEditBody"
              },
              "example" : "{\n  \"rate\" : 12345.0\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/fee-rate/tree/{treeId}" : {
      "post" : {
        "tags" : [ "FeeRestApi" ],
        "description" : "Create rates for given year(tree) and fee.\n\n__Available Since:__ 3.6",
        "operationId" : "FeeRestApi-POST_createFeeRates",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "treeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/FeeRateCreateBody"
              },
              "example" : "{\n  \"feeId\" : 12345,\n  \"rate\" : 12345.0\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeeRateDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/fee-rate/tree/{treeId}/fee/{feeId}" : {
      "delete" : {
        "tags" : [ "FeeRestApi" ],
        "description" : "Delete fee rate\n\n__Available Since:__ 3.6",
        "operationId" : "FeeRestApi-DELETE_deleteFeeRate",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "treeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/fee-rate/tree/{treeId}/month/{month}" : {
      "get" : {
        "tags" : [ "FeeRestApi" ],
        "description" : "Get rates for given year and month.\n\n__Available Since:__ 3.6",
        "operationId" : "FeeRestApi-GET_getFeeRates",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "month",
          "in" : "path",
          "description" : "- java.time.Month values are accepted(JANUARY, FEBRUARY...)",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER" ]
          }
        }, {
          "name" : "treeId",
          "in" : "path",
          "description" : "- id of the year(tree)",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>FeeRateDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeeRatePageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"id\" : 12345,\n    \"feeId\" : 12345,\n    \"startDate\" : \"...\",\n    \"rate\" : 12345.0\n  }, {\n    \"id\" : 12345,\n    \"feeId\" : 12345,\n    \"startDate\" : \"...\",\n    \"rate\" : 12345.0\n  } ],\n  \"@type\" : \"fee-rate\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/fee/node/{nodeId}" : {
      "get" : {
        "tags" : [ "FeeValueRestApi" ],
        "description" : "Get assigned fees to the node\n\n__Available Since:__ 3.6",
        "operationId" : "FeeValueRestApi-GET_getFeeValues",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>FeeValueDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeeValuePageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"feeValueId\" : 12345,\n    \"feeId\" : 12345,\n    \"nodeId\" : 12345,\n    \"global\" : true,\n    \"feeType\" : \"PERCENT\",\n    \"feeName\" : \"...\"\n  }, {\n    \"feeValueId\" : 12345,\n    \"feeId\" : 12345,\n    \"nodeId\" : 12345,\n    \"global\" : true,\n    \"feeType\" : \"PERCENT\",\n    \"feeName\" : \"...\"\n  } ],\n  \"@type\" : \"fee-value\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/fee/{feeId}/node/{nodeId}" : {
      "get" : {
        "tags" : [ "FeeValueRestApi" ],
        "description" : "Get fee value for node. Returns 404(NOT_FOUND) when fee is not assigned to node or specified resources not found\n\n__Available Since:__ 3.6",
        "operationId" : "FeeValueRestApi-GET_getFeeValuForNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeeValueDTO"
                },
                "example" : "{\n  \"feeValueId\" : 12345,\n  \"feeId\" : 12345,\n  \"nodeId\" : 12345,\n  \"global\" : true,\n  \"feeType\" : \"PERCENT\",\n  \"feeName\" : \"...\"\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "FeeValueRestApi" ],
        "description" : "Edit assigned fee to node. Global fee rates can be overridden. If empty body([]) is provided, then assign fee with global values.\n\n__Available Since:__ 3.6",
        "operationId" : "FeeValueRestApi-PUT_editFeeValuForNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/FeeNodeRatesDTO"
                }
              },
              "example" : "[ {\n  \"treeId\" : 12345,\n  \"rates\" : {\n    \"property1\" : {\n      \"id\" : 12345,\n      \"feeId\" : 12345,\n      \"startDate\" : \"...\",\n      \"rate\" : 12345.0\n    },\n    \"property2\" : {\n      \"id\" : 12345,\n      \"feeId\" : 12345,\n      \"startDate\" : \"...\",\n      \"rate\" : 12345.0\n    }\n  },\n  \"nodeId\" : 12345,\n  \"feeId\" : 12345\n} ]"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "post" : {
        "tags" : [ "FeeValueRestApi" ],
        "description" : "Assign fee to node. Global fee rates can be overridden. If empty body([]) is provided, then assign fee with global values.\n\n__Available Since:__ 3.6",
        "operationId" : "FeeValueRestApi-POST_createFeeValuForNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/FeeNodeRatesDTO"
                }
              },
              "example" : "[ {\n  \"treeId\" : 12345,\n  \"rates\" : {\n    \"property1\" : {\n      \"id\" : 12345,\n      \"feeId\" : 12345,\n      \"startDate\" : \"...\",\n      \"rate\" : 12345.0\n    },\n    \"property2\" : {\n      \"id\" : 12345,\n      \"feeId\" : 12345,\n      \"startDate\" : \"...\",\n      \"rate\" : 12345.0\n    }\n  },\n  \"nodeId\" : 12345,\n  \"feeId\" : 12345\n} ]"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeeValueDTO"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "FeeValueRestApi" ],
        "description" : "Delete fee from node\n\n__Available Since:__ 3.6",
        "operationId" : "FeeValueRestApi-DELETE_deleteFeeForNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/fee/{feeId}/node/{nodeId}/tree/{treeId}" : {
      "get" : {
        "tags" : [ "FeeValueRestApi" ],
        "description" : "Get fee rates for given fee, node and tree(year). Returns 404(NOT_FOUND) when fee is not assigned to node or specified resources not found\n\n__Available Since:__ 3.6",
        "operationId" : "FeeValueRestApi-GET_getFeeRatesForNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "feeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "treeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/FeeNodeRatesDTO"
                },
                "example" : "{\n  \"treeId\" : 12345,\n  \"rates\" : {\n    \"property1\" : {\n      \"id\" : 12345,\n      \"feeId\" : 12345,\n      \"startDate\" : \"...\",\n      \"rate\" : 12345.0\n    },\n    \"property2\" : {\n      \"id\" : 12345,\n      \"feeId\" : 12345,\n      \"startDate\" : \"...\",\n      \"rate\" : 12345.0\n    }\n  },\n  \"nodeId\" : 12345,\n  \"feeId\" : 12345\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/group" : {
      "get" : {
        "tags" : [ "GroupRestApi" ],
        "description" : "This method returns usergroups which are defined inside the Marketing Planner.\n\n__Available Since:__ 1.1",
        "operationId" : "GroupRestApi-GET_getGroups",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of GroupDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GroupDTO"
                  }
                },
                "example" : "[ {\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"inherit\" : true\n} ]"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "GroupRestApi" ],
        "description" : "This method creates a new usergroup.\n\n__Available Since:__ 1.1",
        "operationId" : "GroupRestApi-POST_createGroup",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "request body GroupDTO",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupDTO"
              },
              "example" : "{\n  \"name\" : \"Created via REST\"\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/group/{id}" : {
      "get" : {
        "tags" : [ "GroupRestApi" ],
        "description" : "This method provides information about a specific usergroup.\n\n__Available Since:__ 1.1",
        "operationId" : "GroupRestApi-GET_getGroup",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the usergroup.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupDTO"
                },
                "example" : "{\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"inherit\" : true\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "GroupRestApi" ],
        "description" : "This method updates an existing usergroup.\n\n__Available Since:__ 1.1",
        "operationId" : "GroupRestApi-PUT_editGroup",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the usergroup.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "request body GroupDTO",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupDTO"
              },
              "example" : "{\n  \"name\" : \"Renamed via REST\"\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "GroupRestApi" ],
        "description" : "This method deletes an existing usergroup.\n\n__Available Since:__ 1.1",
        "operationId" : "GroupRestApi-DELETE_deleteGroup",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the usergroup.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/group/node/{nodeId}" : {
      "get" : {
        "tags" : [ "GroupRestApi" ],
        "description" : "This method provides a list of assigned user groups on a specific element.\n\n__Available Since:__ 1.1",
        "operationId" : "GroupRestApi-GET_getGroupsForNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the element.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of GroupDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GroupDTO"
                  }
                },
                "example" : "[ {\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"inherit\" : true\n} ]"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "GroupRestApi" ],
        "description" : "This method updates user goups which are assigned to an element.\nIf node has some previously created groups, they will be deleted.\n\n__Available Since:__ 1.1",
        "operationId" : "GroupRestApi-PUT_updateNodeGroups",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the element.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Array of valid user group Ids.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/invoice/{id}" : {
      "get" : {
        "tags" : [ "InvoiceRestApi" ],
        "description" : "This method provides information of a given invoice.\n\n__Available Since:__ 1.0",
        "operationId" : "BillRestApi-GET_getBill",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "(Integer) ID of the invoice.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "BillDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillDTO"
                },
                "example" : "{\n  \"id\" : 12345,\n  \"date\" : \"...\",\n  \"bookingDate\" : \"...\",\n  \"name\" : \"...\",\n  \"jobNumber\" : \"...\",\n  \"costCenter\" : \"...\",\n  \"costType\" : \"...\",\n  \"responsiblePerson\" : \"...\",\n  \"supplier\" : \"...\",\n  \"referenceNumber\" : \"...\",\n  \"number\" : \"...\",\n  \"note\" : \"...\",\n  \"paid\" : true,\n  \"amount\" : 12345.0\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "InvoiceRestApi" ],
        "description" : "This method updates an existing invoice.",
        "operationId" : "BillRestApi-PUT_editBill",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Invoice.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "forseResize",
          "in" : "query",
          "description" : "set parameter to true to resize the node if required",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The request body",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BillDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"date\" : \"...\",\n  \"bookingDate\" : \"...\",\n  \"name\" : \"...\",\n  \"jobNumber\" : \"...\",\n  \"costCenter\" : \"...\",\n  \"costType\" : \"...\",\n  \"responsiblePerson\" : \"...\",\n  \"supplier\" : \"...\",\n  \"referenceNumber\" : \"...\",\n  \"number\" : \"...\",\n  \"note\" : \"...\",\n  \"paid\" : true,\n  \"amount\" : 12345.0\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "InvoiceRestApi" ],
        "description" : "This method deletes an existing invoice.\n\n__Available Since:__ 1.0",
        "operationId" : "BillRestApi-DELETE_deleteBill",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the invoice.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/invoice/link/{invoiceId}" : {
      "put" : {
        "tags" : [ "InvoiceRestApi" ],
        "description" : "Link invoice to sunk cost",
        "operationId" : "BillRestApi-PUT_linkInvoiceToSunkCost",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceId",
          "in" : "path",
          "description" : "id of invoice to link",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "id of sunk cost to link to the invoice",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        },
        "deprecated" : true
      }
    },
    "/maps/rest/api/{version}/invoice/linkAttachment/{invoiceId}" : {
      "put" : {
        "tags" : [ "InvoiceRestApi" ],
        "description" : "\n\n__Available Since:__ 1.1",
        "operationId" : "BillRestApi-PUT_linkInvoiceToAttachment",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceId",
          "in" : "path",
          "description" : "invoice to which to link",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "attachment to link to the invoice",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "201"
          }
        },
        "deprecated" : true
      }
    },
    "/maps/rest/api/{version}/invoice/node/{nodeId}" : {
      "get" : {
        "tags" : [ "InvoiceRestApi" ],
        "description" : "Returns invoices <code>AnnexBillViewBase</code> of node paginated.",
        "operationId" : "BillRestApi-GET_getBillsForNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "not required",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page of BillDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"id\" : 12345,\n    \"date\" : \"...\",\n    \"bookingDate\" : \"...\",\n    \"name\" : \"...\",\n    \"jobNumber\" : \"...\",\n    \"costCenter\" : \"...\",\n    \"costType\" : \"...\",\n    \"responsiblePerson\" : \"...\",\n    \"supplier\" : \"...\",\n    \"referenceNumber\" : \"...\",\n    \"number\" : \"...\",\n    \"note\" : \"...\",\n    \"paid\" : true,\n    \"amount\" : 12345.0\n  }, {\n    \"id\" : 12345,\n    \"date\" : \"...\",\n    \"bookingDate\" : \"...\",\n    \"name\" : \"...\",\n    \"jobNumber\" : \"...\",\n    \"costCenter\" : \"...\",\n    \"costType\" : \"...\",\n    \"responsiblePerson\" : \"...\",\n    \"supplier\" : \"...\",\n    \"referenceNumber\" : \"...\",\n    \"number\" : \"...\",\n    \"note\" : \"...\",\n    \"paid\" : true,\n    \"amount\" : 12345.0\n  } ],\n  \"@type\" : \"bill\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  } ]\n}"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "InvoiceRestApi" ],
        "description" : "This method creates an invoice to a given element.\n\n__Available Since:__ 1.0",
        "operationId" : "BillRestApi-POST_createBill",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "forseResize",
          "in" : "query",
          "description" : "set parameter to true to resize the node if required",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "'value' and 'date' are required fields",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BillDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"date\" : \"...\",\n  \"bookingDate\" : \"...\",\n  \"name\" : \"...\",\n  \"jobNumber\" : \"...\",\n  \"costCenter\" : \"...\",\n  \"costType\" : \"...\",\n  \"responsiblePerson\" : \"...\",\n  \"supplier\" : \"...\",\n  \"referenceNumber\" : \"...\",\n  \"number\" : \"...\",\n  \"note\" : \"...\",\n  \"paid\" : true,\n  \"amount\" : 12345.0\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/invoice/unlink/{invoiceId}" : {
      "put" : {
        "tags" : [ "InvoiceRestApi" ],
        "description" : "Unlink invoice from sunk cost",
        "operationId" : "BillRestApi-PUT_unlinkInvoiceToSunkCost",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceId",
          "in" : "path",
          "description" : "id of invoice to unlink",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/invoice/linked/sunk-cost/{sunkCostId}" : {
      "get" : {
        "tags" : [ "InvoiceRestApi" ],
        "description" : "Returns invoices linked to given sunk cost and tree",
        "operationId" : "BillRestApi-GET_getLinkedToSunkCosts",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sunkCostId",
          "in" : "path",
          "description" : "sunk cost id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Collection of BillDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BillDTO"
                  }
                },
                "example" : "[ {\n  \"id\" : 12345,\n  \"date\" : \"...\",\n  \"bookingDate\" : \"...\",\n  \"name\" : \"...\",\n  \"jobNumber\" : \"...\",\n  \"costCenter\" : \"...\",\n  \"costType\" : \"...\",\n  \"responsiblePerson\" : \"...\",\n  \"supplier\" : \"...\",\n  \"referenceNumber\" : \"...\",\n  \"number\" : \"...\",\n  \"note\" : \"...\",\n  \"paid\" : true,\n  \"amount\" : 12345.0\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/invoice/link/{invoiceId}/attachment/{attachmentId}" : {
      "put" : {
        "tags" : [ "InvoiceRestApi" ],
        "description" : "\n\n__Available Since:__ 3.11",
        "operationId" : "BillRestApi-PUT_linkBillToAttachment",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachmentId",
          "in" : "path",
          "description" : "attachment to link to the invoice",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "invoiceId",
          "in" : "path",
          "description" : "invoice to which to link",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "201"
          }
        }
      }
    },
    "/maps/rest/api/{version}/invoice/link/{invoiceId}/sunk-cost/{sunkCostId}" : {
      "put" : {
        "tags" : [ "InvoiceRestApi" ],
        "description" : "Link invoice to sunk cost\n\n__Available Since:__ 3.11",
        "operationId" : "BillRestApi-PUT_linkBillToSunkCost",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceId",
          "in" : "path",
          "description" : "id of invoice to link",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "sunkCostId",
          "in" : "path",
          "description" : "id of sunk cost to link to the invoice",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/kpi-definition" : {
      "get" : {
        "tags" : [ "KpiDefinitionRestApi" ],
        "description" : "This method provides a list with information about all defined system KPIs.\n\n__Available Since:__ 1.0",
        "operationId" : "KpiDefinitionRestApi-GET_getKpiDefinitions",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 100
          }
        }, {
          "name" : "loadSets",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Name of the KPI",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "page offset",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "requestBody" : {
          "description" : "This method provides a list with information about all defined system KPIs.",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KPIDefinitionPageDTO"
              },
              "example" : "{\n  \"content\" : [ {\n    \"minRate\" : 12345,\n    \"maxRate\" : 12345,\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"archived\" : true,\n    \"required\" : true,\n    \"kpiInfo\" : \"...\",\n    \"type\" : \"constant\",\n    \"analysisType\" : \"none\",\n    \"value\" : \"...\",\n    \"kpiSets\" : [ {\n      \"name\" : \"...\",\n      \"id\" : 12345\n    }, {\n      \"name\" : \"...\",\n      \"id\" : 12345\n    } ]\n  }, {\n    \"minRate\" : 12345,\n    \"maxRate\" : 12345,\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"archived\" : true,\n    \"required\" : true,\n    \"kpiInfo\" : \"...\",\n    \"type\" : \"constant\",\n    \"analysisType\" : \"lessIsBetter\",\n    \"value\" : \"...\",\n    \"kpiSets\" : [ {\n      \"name\" : \"...\",\n      \"id\" : 12345\n    }, {\n      \"name\" : \"...\",\n      \"id\" : 12345\n    } ]\n  } ],\n  \"@type\" : \"kpi\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Page of KPIDefinitionDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KPIDefinitionPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"minRate\" : 12345,\n    \"maxRate\" : 12345,\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"archived\" : true,\n    \"required\" : true,\n    \"kpiInfo\" : \"...\",\n    \"type\" : \"measurable\",\n    \"analysisType\" : \"moreIsBetter\",\n    \"value\" : \"...\",\n    \"kpiSets\" : [ {\n      \"name\" : \"...\",\n      \"id\" : 12345\n    }, {\n      \"name\" : \"...\",\n      \"id\" : 12345\n    } ]\n  }, {\n    \"minRate\" : 12345,\n    \"maxRate\" : 12345,\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"archived\" : true,\n    \"required\" : true,\n    \"kpiInfo\" : \"...\",\n    \"type\" : \"constant\",\n    \"analysisType\" : \"none\",\n    \"value\" : \"...\",\n    \"kpiSets\" : [ {\n      \"name\" : \"...\",\n      \"id\" : 12345\n    }, {\n      \"name\" : \"...\",\n      \"id\" : 12345\n    } ]\n  } ],\n  \"@type\" : \"kpi\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "KpiDefinitionRestApi" ],
        "description" : "This method creates a new system KPI.\n\n__Available Since:__ 1.0",
        "operationId" : "KpiDefinitionRestApi-POST_createKpiDefinition",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "request body KPIDefinitionDTO\n- for property analysisType see allowed values - \"/kpi-definition/analysis-types\"\n- for property type see allowed values  - \"/kpi-definition/types\"",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KPIDefinitionDTO"
              },
              "example" : "{\n  \"minRate\" : 12345,\n  \"maxRate\" : 12345,\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"archived\" : true,\n  \"required\" : true,\n  \"kpiInfo\" : \"...\",\n  \"type\" : \"constant\",\n  \"analysisType\" : \"none\",\n  \"value\" : \"...\",\n  \"kpiSets\" : [ {\n    \"name\" : \"...\",\n    \"id\" : 12345\n  }, {\n    \"name\" : \"...\",\n    \"id\" : 12345\n  } ]\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KPIDefinitionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/kpi-definition/system" : {
      "get" : {
        "tags" : [ "KpiDefinitionRestApi" ],
        "description" : "Returns the names of system kpis that can be used : 'sumBills', 'sumBudgets', 'sumEstimates', 'sumProjected', 'sumRemaining', 'sumMDF', 'sumTarget'\n\n__Available Since:__ 1.0",
        "operationId" : "KpiDefinitionRestApi-GET_getSystemKpis",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List with names of system kpis",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/kpi-definition/{kpiDefinitionId}" : {
      "get" : {
        "tags" : [ "KpiDefinitionRestApi" ],
        "description" : "This method provides information for a given system KPI.\n\n__Available Since:__ 1.0",
        "operationId" : "KpiDefinitionRestApi-GET_geKpiDefinitionById",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kpiDefinitionId",
          "in" : "path",
          "description" : "ID of the KPI.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "loadSets",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "KPIDefinitionDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KPIDefinitionDTO"
                },
                "example" : "{\n  \"minRate\" : 12345,\n  \"maxRate\" : 12345,\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"archived\" : true,\n  \"required\" : true,\n  \"kpiInfo\" : \"...\",\n  \"type\" : \"measurable\",\n  \"analysisType\" : \"moreIsBetter\",\n  \"value\" : \"...\",\n  \"kpiSets\" : [ {\n    \"name\" : \"...\",\n    \"id\" : 12345\n  }, {\n    \"name\" : \"...\",\n    \"id\" : 12345\n  } ]\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "KpiDefinitionRestApi" ],
        "description" : "This method updates an existing system KPI.\n\n__Available Since:__ 1.0",
        "operationId" : "KpiDefinitionRestApi-PUT_editKpiDefinition",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kpiDefinitionId",
          "in" : "path",
          "description" : "ID of the system KPI.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "equest body KPIDefinitionDTO",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KPIDefinitionDTO"
              },
              "example" : "{\n  \"minRate\" : 12345,\n  \"maxRate\" : 12345,\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"archived\" : true,\n  \"required\" : true,\n  \"kpiInfo\" : \"...\",\n  \"type\" : \"constant\",\n  \"analysisType\" : \"moreIsBetter\",\n  \"value\" : \"...\",\n  \"kpiSets\" : [ {\n    \"name\" : \"...\",\n    \"id\" : 12345\n  }, {\n    \"name\" : \"...\",\n    \"id\" : 12345\n  } ]\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "KpiDefinitionRestApi" ],
        "description" : "This method deletes a system KPI.\n\n__Available Since:__ 1.0",
        "operationId" : "KpiDefinitionRestApi-DELETE_deleteKpiDefinition",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kpiDefinitionId",
          "in" : "path",
          "description" : "ID of the system KPI.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/kpi/{kpiId}" : {
      "get" : {
        "tags" : [ "KpiRestApi" ],
        "description" : "This method provides all KPI information for a given kpi id.\n\n__Available Since:__ 1.0",
        "operationId" : "KpiRestApi-GET_getKpiById",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kpiId",
          "in" : "path",
          "description" : "ID of the KPI.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "KpiDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KpiDTO"
                },
                "example" : "{\n  \"id\" : 12345,\n  \"nodeId\" : 12345,\n  \"kpiDefinitionId\" : 12345,\n  \"weight\" : 12345,\n  \"target\" : 12345.0,\n  \"value\" : 12345.0,\n  \"date\" : \"...\",\n  \"infoText\" : \"...\"\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "KpiRestApi" ],
        "description" : "This method updates the KPI information on a given kpi Id.\n\n__Available Since:__ 1.0",
        "operationId" : "KpiRestApi-PUT_editKpi",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kpiId",
          "in" : "path",
          "description" : "ID of the KPI.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "KpiDTO",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KpiDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"nodeId\" : 12345,\n  \"kpiDefinitionId\" : 12345,\n  \"weight\" : 12345,\n  \"target\" : 12345.0,\n  \"value\" : 12345.0,\n  \"date\" : \"...\",\n  \"infoText\" : \"...\"\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "KpiRestApi" ],
        "description" : "This method deletes an KPI.\n\n__Available Since:__ 1.0",
        "operationId" : "KpiRestApi-DELETE_deleteKpi",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kpiId",
          "in" : "path",
          "description" : "ID of the KPI.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/kpi/node/{nodeId}" : {
      "get" : {
        "tags" : [ "KpiRestApi" ],
        "description" : "This method provides a list with KPIs which are set at the given element.\n\n__Available Since:__ 1.0",
        "operationId" : "KpiRestApi-GET_getNodeKpis",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the element.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "treeId",
          "in" : "query",
          "description" : "(Optional) ID of the year.",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Collection of KpiDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/KpiDTO"
                  }
                },
                "example" : "[ {\n  \"id\" : 12345,\n  \"nodeId\" : 12345,\n  \"kpiDefinitionId\" : 12345,\n  \"weight\" : 12345,\n  \"target\" : 12345.0,\n  \"value\" : 12345.0,\n  \"date\" : \"...\",\n  \"infoText\" : \"...\"\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/kpi/node/{nodeId}/kpi-definition/{kpiDefinitionId}" : {
      "post" : {
        "tags" : [ "KpiRestApi" ],
        "description" : "This method creates a KPI on a given element Id.\n\n__Available Since:__ 1.0",
        "operationId" : "KpiRestApi-POST_createKpi",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "kpiDefinitionId",
          "in" : "path",
          "description" : "ID of the system KPI which should be added.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the element.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "KpiDTO",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/KpiDTO"
              },
              "example" : "{\n  \"date\" : \"2018-07-01\",\n  \"weight\" : 2,\n  \"target\" : 100.0,\n  \"value\" : 150.0,\n  \"infoText\" : \"Infotext\"\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/KpiDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/mdf" : {
      "get" : {
        "tags" : [ "MDFRestApi" ],
        "description" : "Returns MDFs that are assigned to approver(if the user is approver)\n\nMDF state can be: \"PENDING\" or \"APPROVED\" or \"REJECTED\"\n\n__Available Since:__ 3.3",
        "operationId" : "MDFRestApi-GET_getMdfsByState",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "MdfDTO.State",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "APPROVED", "PENDING", "REJECTED" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with MdfDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MdfPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"state\" : \"PENDING\",\n    \"requestDate\" : \"...\",\n    \"approvalRejectedDate\" : \"...\",\n    \"name\" : \"...\",\n    \"value\" : 12345.0,\n    \"billId\" : 12345,\n    \"attachmentIds\" : [ 12345, 12345 ],\n    \"approverUserId\" : 12345,\n    \"id\" : 12345,\n    \"nodeId\" : 12345\n  }, {\n    \"state\" : \"REJECTED\",\n    \"requestDate\" : \"...\",\n    \"approvalRejectedDate\" : \"...\",\n    \"name\" : \"...\",\n    \"value\" : 12345.0,\n    \"billId\" : 12345,\n    \"attachmentIds\" : [ 12345, 12345 ],\n    \"approverUserId\" : 12345,\n    \"id\" : 12345,\n    \"nodeId\" : 12345\n  } ],\n  \"@type\" : \"mdf\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/mdf/requested" : {
      "get" : {
        "tags" : [ "MDFRestApi" ],
        "description" : "Returns MDFs that are requested by the user.\n\n__Available Since:__ 3.6",
        "operationId" : "MDFRestApi-GET_getRequestedMdfs",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "states",
          "in" : "query",
          "description" : "list of MDF's states that needs to be included",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "APPROVED", "PENDING", "REJECTED" ]
            }
          }
        }, {
          "name" : "treeId",
          "in" : "query",
          "description" : "- optional, if not provided all the years are included",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with MdfDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MdfPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"state\" : \"APPROVED\",\n    \"requestDate\" : \"...\",\n    \"approvalRejectedDate\" : \"...\",\n    \"name\" : \"...\",\n    \"value\" : 12345.0,\n    \"billId\" : 12345,\n    \"attachmentIds\" : [ 12345, 12345 ],\n    \"approverUserId\" : 12345,\n    \"id\" : 12345,\n    \"nodeId\" : 12345\n  }, {\n    \"state\" : \"PENDING\",\n    \"requestDate\" : \"...\",\n    \"approvalRejectedDate\" : \"...\",\n    \"name\" : \"...\",\n    \"value\" : 12345.0,\n    \"billId\" : 12345,\n    \"attachmentIds\" : [ 12345, 12345 ],\n    \"approverUserId\" : 12345,\n    \"id\" : 12345,\n    \"nodeId\" : 12345\n  } ],\n  \"@type\" : \"mdf\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/mdf/{id}" : {
      "get" : {
        "tags" : [ "MDFRestApi" ],
        "description" : "This method provides all MDF information for a given MDF.\n\n__Available Since:__ 3.3",
        "operationId" : "MDFRestApi-GET_getMdf",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the MDF.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "MdfDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MdfDTO"
                },
                "example" : "{\n  \"state\" : \"REJECTED\",\n  \"requestDate\" : \"...\",\n  \"approvalRejectedDate\" : \"...\",\n  \"name\" : \"...\",\n  \"value\" : 12345.0,\n  \"billId\" : 12345,\n  \"attachmentIds\" : [ 12345, 12345 ],\n  \"approverUserId\" : 12345,\n  \"id\" : 12345,\n  \"nodeId\" : 12345\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/mdf/approve/{mdfId}" : {
      "put" : {
        "tags" : [ "MDFRestApi" ],
        "description" : "This method approves a requested MDF. User needs to be the assigned approver.\n\n__Available Since:__ 3.3",
        "operationId" : "MDFRestApi-PUT_approveMDF",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mdfId",
          "in" : "path",
          "description" : "ID of the MDF",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "MdfApproveBody",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MdfApproveBody"
              },
              "example" : "{\n  \"value\" : \"100\",\n  \"comment\" : \"MDF Comment\"\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/mdf/node/{nodeId}" : {
      "get" : {
        "tags" : [ "MDFRestApi" ],
        "description" : "This method provides an MDF list of a given element.\n\n__Available Since:__ 3.3",
        "operationId" : "MDFRestApi-GET_getMdfsForNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the element.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "(Optional)",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with MdfDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MdfPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"state\" : \"PENDING\",\n    \"requestDate\" : \"...\",\n    \"approvalRejectedDate\" : \"...\",\n    \"name\" : \"...\",\n    \"value\" : 12345.0,\n    \"billId\" : 12345,\n    \"attachmentIds\" : [ 12345, 12345 ],\n    \"approverUserId\" : 12345,\n    \"id\" : 12345,\n    \"nodeId\" : 12345\n  }, {\n    \"state\" : \"APPROVED\",\n    \"requestDate\" : \"...\",\n    \"approvalRejectedDate\" : \"...\",\n    \"name\" : \"...\",\n    \"value\" : 12345.0,\n    \"billId\" : 12345,\n    \"attachmentIds\" : [ 12345, 12345 ],\n    \"approverUserId\" : 12345,\n    \"id\" : 12345,\n    \"nodeId\" : 12345\n  } ],\n  \"@type\" : \"mdf\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/mdf/reject/{mdfId}" : {
      "put" : {
        "tags" : [ "MDFRestApi" ],
        "description" : "This method rejects a requested MDF. User needs to be the assigned approver.\n\n__Available Since:__ 3.3",
        "operationId" : "MDFRestApi-PUT_rejectMDF",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mdfId",
          "in" : "path",
          "description" : "ID of the MDF",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/mdf/request/{mdfId}" : {
      "put" : {
        "tags" : [ "MDFRestApi" ],
        "description" : "This method updates a rejected MDF. User needs to be the requestor.\n\n__Available Since:__ 3.3",
        "operationId" : "MDFRestApi-PUT_updateToRequestedMDF",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mdfId",
          "in" : "path",
          "description" : "ID of the MDF",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "MdfRequestBody, only fields 'comment' and 'attachmentIds' can be changed.\nAll other fields will be ignored",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MdfRequestBody"
              },
              "example" : "{\n  \"comment\" : \"MDF Comment Renamed\"\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/mdf/{mdfId}/comment" : {
      "get" : {
        "tags" : [ "MDFRestApi" ],
        "description" : "This method returns page with comments placed on the specified mdf.",
        "operationId" : "MDFRestApi-GET_getMdfComments",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "mdfId",
          "in" : "path",
          "description" : "ID of the MDF",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "page offset",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with MDFCommentDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MdfCommentPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"date\" : \"...\",\n    \"user\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"comment\" : \"...\"\n  }, {\n    \"date\" : \"...\",\n    \"user\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"comment\" : \"...\"\n  } ],\n  \"@type\" : \"mdf-comment\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/mdf/grant/node/{nodeId}" : {
      "post" : {
        "tags" : [ "MDFRestApi" ],
        "description" : "This method creates a new granted MDF for a given element. User needs to be an approver.\n\n__Available Since:__ 3.3",
        "operationId" : "MDFRestApi-POST_createGrantedMDF",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the element.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "MdfGrantBody",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MdfGrantBody"
              },
              "example" : "{\n  \"name\" : \"MDF\",\n  \"date\" : \"2019-11-13\",\n  \"value\" : \"100\",\n  \"comment\" : \"MDF Comment\"\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MdfDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/mdf/request/node/{nodeId}" : {
      "post" : {
        "tags" : [ "MDFRestApi" ],
        "description" : "This method creates a new MDF request for a given element with status \"PENDING\". User needs to be a\nrequester.\n\n__Available Since:__ 3.3",
        "operationId" : "MDFRestApi-POST_createRequestedMDF",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the element.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "MdfRequestBody, fields : 'name', 'approverUserId', 'billId' are mandatory",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MdfRequestBody"
              },
              "example" : "{\n  \"name\" : \"MDF\",\n  \"approverUserId\" : 100,\n  \"comment\" : \"MDF Comment\",\n  \"billId\" : 11\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MdfDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/managed-task" : {
      "post" : {
        "tags" : [ "ManagedTaskRestApi" ],
        "description" : "This method creates a Marketing Planner Job task (so called managed task) for a given\nelement or links an already existing Job to a Marketing Planner task.\n\n__Available Since:__ 1.0",
        "operationId" : "ManagedTaskRestApi-POST_create",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createJob",
          "in" : "query",
          "description" : "default is true. Set to true if job manager's job must be created.\nSet this param to false and provide @param jobId to link job manager's job",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "jobId",
          "in" : "query",
          "description" : "job manager's job id. Must be provided for job linking if @param createJob is false",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "request body ManageTaskCreateDTO\n- for property taskState see allowed values - \"/task/statuses\"\n- for property markerType see allowed values  - \"/marker\"",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ManageTaskCreateDTO"
              },
              "example" : "[ {\n  \"nodeId\" : \"20\",\n  \"markerType\" : 60,\n  \"responsibleUser\" : {\n    \"userId\" : 100\n  },\n  \"info\" : \"Comment\",\n  \"name\" : \"Created via REST\",\n  \"date\" : \"2015-05-18\",\n  \"state\" : \"IN_PROGRESS\",\n  \"jobTypeId\" : 27,\n  \"workflowId\" : 2\n} ]"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/managed-task/{taskId}" : {
      "put" : {
        "tags" : [ "ManagedTaskRestApi" ],
        "description" : "Edit managed task's responsible person, marker type and description\n\n__Available Since:__ 1.0",
        "operationId" : "ManagedTaskRestApi-PUT_editManagedTask",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "task id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "EditMTaskRequestBody",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditMTaskRequestBody"
              },
              "example" : "[ {\n  \"markerType\" : 60,\n  \"responsibleUserId\" : 11\n} ]"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/managed-task/job/{jobId}" : {
      "get" : {
        "tags" : [ "ManagedTaskRestApi" ],
        "description" : "Returns managed task by given jobId(job manager's job id)\n\n__Available Since:__ 1.0",
        "operationId" : "ManagedTaskRestApi-GET_getManagedTaskByJobId",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "jobId",
          "in" : "path",
          "description" : "ID of the Job.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "TaskDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskDTO"
                },
                "example" : "{\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"date\" : \"...\",\n  \"state\" : \"CANCELLED\",\n  \"markerType\" : 12345,\n  \"responsibleUser\" : {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  },\n  \"info\" : \"...\",\n  \"jobId\" : 12345,\n  \"nodeId\" : 12345\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/marker" : {
      "get" : {
        "tags" : [ "MarkerRestApi" ],
        "description" : "This method provides a list of all possible marker ids.\n\n__Available Since:__ 1.0",
        "operationId" : "MarkerRestApi-GET_getMarkers",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "array with all markers ids",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/maps/rest/api/{version}/marker/node/{nodeId}" : {
      "get" : {
        "tags" : [ "MarkerRestApi" ],
        "description" : "This method provides a list with all assigned markers for a given element. If the element\ndoes not have any markers assigned, then the return is empty.\n\n__Available Since:__ 1.0",
        "operationId" : "MarkerRestApi-GET_getMarkersOfNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "id of node element",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "array of marker ids",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "integer",
                    "format" : "int32"
                  }
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "MarkerRestApi" ],
        "description" : "This method adds a marker to a planning element, for example to indicate the priority of\nan activity.\n\n__Available Since:__ 1.0",
        "operationId" : "MarkerRestApi-PUT_addMarkersToNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the element.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "Integer list. Comma separated list with all markers that should be added.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              },
              "example" : "[ 22 ]"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "MarkerRestApi" ],
        "description" : "Delete markers for given node.\n\n__Available Since:__ 1.0",
        "operationId" : "MarkerRestApi-DELETE_removeNodeMarkers",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "id of node",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "marker ids",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/marker-categories" : {
      "get" : {
        "tags" : [ "MarkerTypeRestApi" ],
        "description" : "This method provides the marker category information.\n\n__Available Since:__ 3.3",
        "operationId" : "MarkerTypeRestApi-GET_getMarkerCategories",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "array with all marker categories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MarkerTypeCategoryDTO"
                  }
                },
                "example" : "[ {\n  \"id\" : 12345,\n  \"active\" : true,\n  \"predefined\" : true,\n  \"name\" : \"...\"\n} ]"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "MarkerTypeRestApi" ],
        "description" : "Update marker categories\n\n__Available Since:__ 3.3",
        "operationId" : "MarkerTypeRestApi-PUT_updateMarkerCategories",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of MarkerTypeCategoryDTO",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MarkerTypeCategoryDTO"
                }
              },
              "example" : "[ {\n  \"id\" : 41,\n  \"name\" : \"SOCIAL_ICONS\",\n  \"active\" : false\n} ]"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "post" : {
        "tags" : [ "MarkerTypeRestApi" ],
        "description" : "Create new marker category.\n\n__Available Since:__ 3.3",
        "operationId" : "MarkerTypeRestApi-POST_createMarkerCategories",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "MarkerTypeCategoryDTO",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MarkerTypeCategoryDTO"
              },
              "example" : "{\n  \"name\" : \"New marker category\",\n  \"active\" : true\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MarkerTypeCategoryDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/markers" : {
      "get" : {
        "tags" : [ "MarkerTypeRestApi" ],
        "description" : "This method provides a list of all possible marker IDs.\n\n__Available Since:__ 3.3",
        "operationId" : "MarkerTypeRestApi-GET_getMarkerTypes",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "array with all markers List of MarkerTypeDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MarkerTypeDTO"
                  }
                },
                "example" : "[ {\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"fileId\" : 12345,\n  \"categoryId\" : 12345,\n  \"active\" : true,\n  \"predefined\" : true\n} ]"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "MarkerTypeRestApi" ],
        "description" : "Update marker types. Image can be replaced as base64 string. File type must be provided along with the base64 string.\n\n__Available Since:__ 3.3",
        "operationId" : "MarkerTypeRestApi-PUT_updateMarkers",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of MarkerTypeRequestBody",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MarkerTypeRequestBody"
                }
              },
              "example" : "[ {\n  \"predefined\" : true,\n  \"categoryId\" : 1,\n  \"base64File\" : \"Here comes the base64 string\",\n  \"active\" : false,\n  \"fileType\" : \"image/png\",\n  \"name\" : \"Test\"\n} ]"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "post" : {
        "tags" : [ "MarkerTypeRestApi" ],
        "description" : "Create new marker types. Image is attached as base64 string. File type must be provided along with the base64 string.\n\n__Available Since:__ 3.3",
        "operationId" : "MarkerTypeRestApi-POST_createMarkers",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of MarkerTypeRequestBody",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/MarkerTypeRequestBody"
                }
              },
              "example" : "[ {\n  \"categoryId\" : 38,\n  \"base64File\" : \"Here comes the base64 string\",\n  \"active\" : true,\n  \"fileType\" : \"image/png\",\n  \"name\" : \"Test\"\n} ]"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201"
          }
        }
      },
      "delete" : {
        "tags" : [ "MarkerTypeRestApi" ],
        "description" : "Delete marker type. Multiple ids can be provided in the form ?markerIds=<xxx>&markerIds=<yyy>&...\n\n__Available Since:__ 3.3",
        "operationId" : "MarkerTypeRestApi-DELETE_deleteMarkers",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "markerIds",
          "in" : "query",
          "description" : "List of markers ids",
          "required" : true,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/marker-categories/{categoryId}" : {
      "delete" : {
        "tags" : [ "MarkerTypeRestApi" ],
        "description" : "Delete marker category\n\n__Available Since:__ 3.3",
        "operationId" : "MarkerTypeRestApi-DELETE_deleteMarkerCategory",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "categoryId",
          "in" : "path",
          "description" : "ID of the marker category.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/markers/download/{markerId}" : {
      "get" : {
        "tags" : [ "MarkerTypeRestApi" ],
        "description" : "This method allows to download the marker icon for a given marker ID.\n\n__Available Since:__ 3.3",
        "operationId" : "MarkerTypeRestApi-GET_downloadMarker",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "markerId",
          "in" : "path",
          "description" : "ID of the marker. to download",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/module/all" : {
      "get" : {
        "tags" : [ "ModuleRestApi" ],
        "description" : "Returns module codes which are defined in Maps as Subnavigation entries - Calendar view, Budget view and so on.\nThe property 'canApplyView' indicates for which modules can be applied view (Calendar, Budget and Reports)\n\n__Available Since:__ 1.0",
        "operationId" : "ModuleRestApi-GET_getMapsModules",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of ModuleDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ModuleDTO"
                  }
                },
                "example" : "[ {\n  \"moduleCode\" : \"...\",\n  \"canApplyView\" : true,\n  \"name\" : \"...\"\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/module/generate-link" : {
      "post" : {
        "tags" : [ "ModuleRestApi" ],
        "description" : "Generates link per module(optional) and view(optional)\n\n__Available Since:__ 1.0",
        "operationId" : "ModuleRestApi-POST_getModuleViewLink",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "ModuleLinkRequestBody",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModuleLinkRequestBody"
              },
              "example" : "{\n  \"moduleCode\" : \"...\",\n  \"viewId\" : 12345,\n  \"columnSetId\" : 12345\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/comment/{id}" : {
      "get" : {
        "tags" : [ "NodeCommentRestApi" ],
        "description" : "Return comment, mentioned users will be in format [~login]\nIf there is no creator in response, this means that the user is deleted.",
        "operationId" : "NodeCommentRestApi-GET_getNodeComment",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Comment.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "NodeCommentDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeCommentDTO"
                },
                "example" : "{\n  \"id\" : 12345,\n  \"nodeId\" : 12345,\n  \"commentDate\" : \"...\",\n  \"comment\" : \"...\",\n  \"creator\" : {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  }\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "NodeCommentRestApi" ],
        "description" : "This method updates the own element comment on a given comment ID.",
        "operationId" : "NodeCommentRestApi-PUT_editComment",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the comment.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "NodeCommentRequestBody",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NodeCommentRequestBody"
              },
              "example" : "{\n  \"comment\" : \"[~max.mustermann] I added new Budget\"\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "NodeCommentRestApi" ],
        "description" : "This method deletes an own added element comment.",
        "operationId" : "NodeCommentRestApi-DELETE_deleteComment",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the comment.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/comment/node/{nodeId}" : {
      "get" : {
        "tags" : [ "NodeCommentRestApi" ],
        "description" : "Return page of comments, mentioned users will be in format [~login] for example  [~ivan.ivan]\nIf there is no creator in response, this means that the user is deleted.",
        "operationId" : "NodeCommentRestApi-GET_getNodeComments",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the Comment.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "page offset",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with NodeCommentDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeCommentPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"id\" : 12345,\n    \"nodeId\" : 12345,\n    \"commentDate\" : \"...\",\n    \"comment\" : \"...\",\n    \"creator\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    }\n  }, {\n    \"id\" : 12345,\n    \"nodeId\" : 12345,\n    \"commentDate\" : \"...\",\n    \"comment\" : \"...\",\n    \"creator\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    }\n  } ],\n  \"@type\" : \"node-comment\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "NodeCommentRestApi" ],
        "description" : "Create comment for node. To mention user in the comment use '[~login]' for example [~my.username]",
        "operationId" : "NodeCommentRestApi-POST_createComment",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the element",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "NodeCommentRequestBody",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NodeCommentRequestBody"
              },
              "example" : "{\n  \"comment\" : \"...\"\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeCommentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/node/user-assigned" : {
      "get" : {
        "tags" : [ "NodeRestApi" ],
        "description" : "Returns nodes of the user where the user is assigned like responsible user of the node\n\n__Available Since:__ 3.1",
        "operationId" : "NodeRestApi-GET_getAssignedNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "- optional",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "treeId",
          "in" : "query",
          "description" : "- optional. If provided, only the nodes within the tree is returned",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>NodeDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodePageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"parentId\" : 12345,\n    \"startDate\" : \"...\",\n    \"endDate\" : \"...\",\n    \"currencyId\" : 12345,\n    \"externalId\" : \"...\",\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"info\" : \"...\",\n    \"respPerson\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"leaf\" : true,\n    \"nodeTypeId\" : 12345,\n    \"ancestors\" : [ {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    }, {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    } ]\n  }, {\n    \"parentId\" : 12345,\n    \"startDate\" : \"...\",\n    \"endDate\" : \"...\",\n    \"currencyId\" : 12345,\n    \"externalId\" : \"...\",\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"info\" : \"...\",\n    \"respPerson\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"leaf\" : true,\n    \"nodeTypeId\" : 12345,\n    \"ancestors\" : [ {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    }, {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    } ]\n  } ],\n  \"@type\" : \"node\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/node/{id}" : {
      "get" : {
        "tags" : [ "NodeRestApi" ],
        "description" : "Returns node details by node id. Set withAdditionalInfo to true if you want to get additional information about the node, like externalId, currency, description, responsible person.\n\n__Available Since:__ 1.0",
        "operationId" : "NodeRestApi-GET_getNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the element",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "withAdditionalInfo",
          "in" : "query",
          "description" : "(Optional) can be true or false, default is false",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "NodeDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeDTO"
                },
                "example" : "{\n  \"id\" : 7726,\n  \"parentId\" : 7722,\n  \"name\" : \"Program B\",\n  \"startDate\" : \"2008-01-01\",\n  \"endDate\" : \"2022-12-31\",\n  \"nodeType\" : {\n    \"id\" : 1,\n    \"name\" : \"Standard\",\n    \"colour\" : \"000000\",\n    \"backgroundColour\" : \"ffffff\",\n    \"bold\" : false,\n    \"italic\" : false,\n    \"active\" : true,\n    \"editable\" : false,\n    \"icon\" : 0\n  },\n  \"nodeTypeId\" : 1,\n  \"currencyId\" : 1\n}"
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "NodeRestApi" ],
        "description" : "This method deletes a planning element with all children and all associations like\nattachments, bills, markers, etc.\n\n__Available Since:__ 1.0",
        "operationId" : "NodeRestApi-DELETE_deleteNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the element.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/node/{nodeId}" : {
      "put" : {
        "tags" : [ "NodeRestApi" ],
        "description" : "If the dates extend parent node, it will be resized automatically. For nodeTypeId property see NodeTypeRestApi#getNodeTypes().\n\n__Available Since:__ 1.0",
        "operationId" : "NodeRestApi-PUT_editNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the element.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "EditNodeRequestBody",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditNodeRequestBody"
              },
              "example" : "{\n  \"startDate\" : \"...\",\n  \"endDate\" : \"...\",\n  \"externalId\" : \"...\",\n  \"nodeName\" : \"...\",\n  \"responsiblePerson\" : {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  },\n  \"generalNote\" : \"...\",\n  \"currencyId\" : 12345,\n  \"nodeTypeId\" : 12345\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/node/{parentId}" : {
      "post" : {
        "tags" : [ "NodeRestApi" ],
        "description" : "Create node or child node. For nodeTypeId property see NodeTypeRestApi#getNodeTypes().\nIf type is not specified or is wrong, default type 'Standard' will be used.\nIf the dates extend parent node, it will be resized automatically.To set node as never expire : 9999-12-31\n\n__Available Since:__ 1.0",
        "operationId" : "NodeRestApi-POST_create",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentId",
          "in" : "path",
          "description" : "parent node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "prevSiblingId",
          "in" : "query",
          "description" : "(Optional) Sibling element id. Example values: ?prevSiblingId=14",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateNodeRequestBody"
              },
              "example" : "{\n  \"name\" : \"New Node\",\n  \"startDate\" : \"2022-01-20\",\n  \"endDate\" : \"2022-02-20\",\n  \"nodeTypeId\" : \"1\",\n  \"info\" : \"Node created via rest\",\n  \"currencyId\" : 1\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/node/externalId/{externalId}" : {
      "get" : {
        "tags" : [ "NodeRestApi" ],
        "description" : "\n\n__Available Since:__ 1.0",
        "operationId" : "NodeRestApi-GET_getNodeByExternalId",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalId",
          "in" : "path",
          "description" : "external ID of the node",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "withAdditionalInfo",
          "in" : "query",
          "description" : "not required. If param exists with return <code>NodeDetailsDTO</code>",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : " NodeDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeDTO"
                },
                "example" : "{\n  \"parentId\" : 12345,\n  \"startDate\" : \"...\",\n  \"endDate\" : \"...\",\n  \"currencyId\" : 12345,\n  \"externalId\" : \"...\",\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"info\" : \"...\",\n  \"respPerson\" : {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  },\n  \"leaf\" : true,\n  \"nodeTypeId\" : 12345,\n  \"ancestors\" : [ {\n    \"id\" : 12345,\n    \"name\" : \"...\"\n  }, {\n    \"id\" : 12345,\n    \"name\" : \"...\"\n  } ]\n}"
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/maps/rest/api/{version}/node/managed-task/{managedTaskJobId}" : {
      "get" : {
        "tags" : [ "NodeRestApi" ],
        "description" : "Return Node information.Set withAdditionalInfo to true if you want to get additional information about the node, like externalId, currency, description, responsible person.\n\n__Available Since:__ 1.0",
        "operationId" : "NodeRestApi-GET_getNodeByManagedTaskJobId",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "managedTaskJobId",
          "in" : "path",
          "description" : "ID of the job.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "withAdditionalInfo",
          "in" : "query",
          "description" : "(Optional)",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "NodeDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeDTO"
                },
                "example" : "{\n  \"parentId\" : 12345,\n  \"startDate\" : \"...\",\n  \"endDate\" : \"...\",\n  \"currencyId\" : 12345,\n  \"externalId\" : \"...\",\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"info\" : \"...\",\n  \"respPerson\" : {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  },\n  \"leaf\" : true,\n  \"nodeTypeId\" : 12345,\n  \"ancestors\" : [ {\n    \"id\" : 12345,\n    \"name\" : \"...\"\n  }, {\n    \"id\" : 12345,\n    \"name\" : \"...\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/node/root/{treeId}" : {
      "get" : {
        "tags" : [ "NodeRestApi" ],
        "description" : "\n\n__Available Since:__ 1.0",
        "operationId" : "NodeRestApi-GET_getRootNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "treeId",
          "in" : "path",
          "description" : "ID of the year.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "NodeDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeDTO"
                },
                "example" : "{\n  \"id\" : 1,\n  \"name\" : \"liveIn\",\n  \"startDate\" : \"2012-02-01\",\n  \"endDate\" : \"9999-12-31\",\n  \"leaf\" : false,\n  \"nodeType\" : {\n    \"id\" : 1,\n    \"name\" : \"Standard\",\n    \"colour\" : \"000000\",\n    \"backgroundColour\" : \"ffffff\",\n    \"bold\" : false,\n    \"italic\" : false,\n    \"active\" : true,\n    \"editable\" : false,\n    \"icon\" : 0\n  }\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/node/{nodeId}/deeplink" : {
      "get" : {
        "tags" : [ "NodeRestApi" ],
        "description" : "Return deeplink for calendar and budget views\n\n__Available Since:__ 1.0",
        "operationId" : "NodeRestApi-GET_getNodeDeeplink",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "treeId",
          "in" : "query",
          "description" : "optional parameter",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "NodeDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeDeeplinkDTO"
                },
                "example" : "{\n  \"calendarLink\" : \"...\",\n  \"budgetLink\" : \"...\",\n  \"node\" : {\n    \"parentId\" : 12345,\n    \"startDate\" : \"...\",\n    \"endDate\" : \"...\",\n    \"currencyId\" : 12345,\n    \"externalId\" : \"...\",\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"info\" : \"...\",\n    \"respPerson\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"leaf\" : true,\n    \"nodeTypeId\" : 12345,\n    \"ancestors\" : [ {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    }, {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    } ]\n  }\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/node/{nodeId}/copy/{parentId}" : {
      "post" : {
        "tags" : [ "NodeRestApi" ],
        "description" : "Copy node to parent. If there is exceed between the copied node and parent node dates, @param resizeType will be used.\n\n__Available Since:__ 1.0",
        "operationId" : "NodeRestApi-POST_copy",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "parentId",
          "in" : "path",
          "description" : "new parent node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "resizeType",
          "in" : "query",
          "description" : "not required. Default is extendParent(extend dates of parent). If presented value \"shrinkChild\" will shrink the dates of child",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "requestBody" : {
          "description" : "NodeCopyRequestBody",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NodeCopyRequestBody"
              },
              "example" : "{\n  \"copyTimelines\" : true,\n  \"copyTasks\" : true,\n  \"copyMarkers\" : true,\n  \"copyAttachments\" : true,\n  \"copyInvoices\" : true,\n  \"copySunkCosts\" : true,\n  \"copyBudgets\" : true,\n  \"copySunkCostBills\" : true,\n  \"copyPlanTarget\" : true,\n  \"copyDimensions\" : true,\n  \"copyKpis\" : true,\n  \"copyGeneralInfo\" : true,\n  \"copyFees\" : true\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeDTO"
                },
                "example" : "{\n  \"parentId\" : 12345,\n  \"startDate\" : \"...\",\n  \"endDate\" : \"...\",\n  \"currencyId\" : 12345,\n  \"externalId\" : \"...\",\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"info\" : \"...\",\n  \"respPerson\" : {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  },\n  \"leaf\" : true,\n  \"nodeTypeId\" : 12345,\n  \"ancestors\" : [ {\n    \"id\" : 12345,\n    \"name\" : \"...\"\n  }, {\n    \"id\" : 12345,\n    \"name\" : \"...\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/node/{nodeId}/move/{parentId}" : {
      "post" : {
        "tags" : [ "NodeRestApi" ],
        "description" : "Move node to parent. If there is exceed between the copied node and parent node dates, @param resizeType will be used.\n\n__Available Since:__ 3.4",
        "operationId" : "NodeRestApi-POST_move",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "parentId",
          "in" : "path",
          "description" : "new parent node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "afterNodeId",
          "in" : "query",
          "description" : "not required. After which node to move the node that is moved. Default is at first position of the parent",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "resizeType",
          "in" : "query",
          "description" : "not required. Default is extendParent(extend dates of parent). If presented value \"shrinkChild\" will shrink the dates of child",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodeDTO"
                },
                "example" : "{\n  \"parentId\" : 12345,\n  \"startDate\" : \"...\",\n  \"endDate\" : \"...\",\n  \"currencyId\" : 12345,\n  \"externalId\" : \"...\",\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"info\" : \"...\",\n  \"respPerson\" : {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  },\n  \"leaf\" : true,\n  \"nodeTypeId\" : 12345,\n  \"ancestors\" : [ {\n    \"id\" : 12345,\n    \"name\" : \"...\"\n  }, {\n    \"id\" : 12345,\n    \"name\" : \"...\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/node/child/{nodeId}/from-tree/{fromTreeId}/to-tree/{toTreeId}" : {
      "get" : {
        "tags" : [ "NodeRestApi" ],
        "description" : "Returns children for given node between start date from <i>fromTreeId</i> and end date for <i>toTreeId</i>, paginated </br>\nparams : </br>\n\n__Available Since:__ 1.0",
        "operationId" : "NodeRestApi-GET_getChildNodes",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fromTreeId",
          "in" : "path",
          "description" : "id from <code>Tree</code>",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id </br>",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "toTreeId",
          "in" : "path",
          "description" : "id to <code>Tree</code>",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "not required",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "withAdditionalInfo",
          "in" : "query",
          "description" : "not required. If param exists with return <code>NodeDTO</code> with filled all fields",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "description" : "Returns children for given node between start date from <i>fromTreeId</i> and end date for <i>toTreeId</i>, paginated </br>\nparams : </br>",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NodePageDTO"
              },
              "example" : "{\n  \"content\" : [ {\n    \"parentId\" : 12345,\n    \"startDate\" : \"...\",\n    \"endDate\" : \"...\",\n    \"currencyId\" : 12345,\n    \"externalId\" : \"...\",\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"info\" : \"...\",\n    \"respPerson\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"leaf\" : true,\n    \"nodeTypeId\" : 12345,\n    \"ancestors\" : [ {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    }, {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    } ]\n  }, {\n    \"parentId\" : 12345,\n    \"startDate\" : \"...\",\n    \"endDate\" : \"...\",\n    \"currencyId\" : 12345,\n    \"externalId\" : \"...\",\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"info\" : \"...\",\n    \"respPerson\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"leaf\" : true,\n    \"nodeTypeId\" : 12345,\n    \"ancestors\" : [ {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    }, {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    } ]\n  } ],\n  \"@type\" : \"node\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  } ]\n}"
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Page with <code>NodeDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodePageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"parentId\" : 12345,\n    \"startDate\" : \"...\",\n    \"endDate\" : \"...\",\n    \"currencyId\" : 12345,\n    \"externalId\" : \"...\",\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"info\" : \"...\",\n    \"respPerson\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"leaf\" : true,\n    \"nodeTypeId\" : 12345,\n    \"ancestors\" : [ {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    }, {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    } ]\n  }, {\n    \"parentId\" : 12345,\n    \"startDate\" : \"...\",\n    \"endDate\" : \"...\",\n    \"currencyId\" : 12345,\n    \"externalId\" : \"...\",\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"info\" : \"...\",\n    \"respPerson\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"leaf\" : true,\n    \"nodeTypeId\" : 12345,\n    \"ancestors\" : [ {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    }, {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    } ]\n  } ],\n  \"@type\" : \"node\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/node-type" : {
      "get" : {
        "tags" : [ "NodeTypeRestApi" ],
        "description" : "Return active node types to use in node creation/edit.\n\n__Available Since:__ 3.3",
        "operationId" : "NodeTypeRestApi-GET_getNodeTypes",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of NodeTypeDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/NodeTypeDTO"
                  }
                },
                "example" : "[ {\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"colour\" : \"...\",\n  \"bold\" : true,\n  \"italic\" : true,\n  \"active\" : true,\n  \"editable\" : true,\n  \"icon\" : 12345,\n  \"backgroundColour\" : \"...\"\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/node-type/icons" : {
      "get" : {
        "tags" : [ "NodeTypeRestApi" ],
        "description" : "Return all available icons for node types. Use the download rest point to get the actual icon.\n\n__Available Since:__ 3.4",
        "operationId" : "NodeTypeRestApi-GET_getNodeTypeIcons",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of ElementTypeDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ElementTypeDTO"
                  }
                },
                "example" : "[ {\n  \"id\" : 12345,\n  \"fileId\" : 12345,\n  \"base64File\" : \"...\",\n  \"fileType\" : \"...\",\n  \"predefined\" : true\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/node-type/icons/download/{typeId}" : {
      "get" : {
        "tags" : [ "NodeTypeRestApi" ],
        "description" : "\n\n__Available Since:__ 3.4",
        "operationId" : "NodeTypeRestApi-GET_downloadTypeIcon",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "typeId",
          "in" : "path",
          "description" : "element type to download",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InputStream"
                },
                "example" : "{ }"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/period/{id}" : {
      "get" : {
        "tags" : [ "PeriodRestApi" ],
        "description" : "This method provides information of a given timeline.\n\n__Available Since:__ 1.0",
        "operationId" : "PeriodRestApi-GET_getPeriod",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the timeline.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "AnnexPeriodDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnexPeriodDTO"
                },
                "example" : "{\n  \"startDate\" : \"...\",\n  \"id\" : 12345,\n  \"endDate\" : \"...\",\n  \"categoryId\" : 12345,\n  \"name\" : \"...\"\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "PeriodRestApi" ],
        "description" : "This method updates an existing timeline.\n\n__Available Since:__ 1.0",
        "operationId" : "PeriodRestApi-PUT_editPeriod",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the timeline.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "AnnexPeriodDTO",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnnexPeriodDTO"
              },
              "example" : "{\n  \"startDate\" : \"2017-06-20\",\n  \"endDate\" : \"2017-09-17\",\n  \"categoryId\" : 5\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "PeriodRestApi" ],
        "description" : "This method deletes an existing timeline.\n\n__Available Since:__ 1.0",
        "operationId" : "PeriodRestApi-DELETE_deletePeriod",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the timeline.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/period/node/{nodeId}" : {
      "get" : {
        "tags" : [ "PeriodRestApi" ],
        "description" : "Return paginated periods(timelines) of the node\n\n__Available Since:__ 3.1",
        "operationId" : "PeriodRestApi-GET_getNodePeriods",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "id of the node",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>AnnexPeriodViewBase</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnexPeriodPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"startDate\" : \"...\",\n    \"id\" : 12345,\n    \"endDate\" : \"...\",\n    \"categoryId\" : 12345,\n    \"name\" : \"...\"\n  }, {\n    \"startDate\" : \"...\",\n    \"id\" : 12345,\n    \"endDate\" : \"...\",\n    \"categoryId\" : 12345,\n    \"name\" : \"...\"\n  } ],\n  \"@type\" : \"annex\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PeriodRestApi" ],
        "description" : "This method creates a new timeline for a given element.\nIf the timeline exceeds the start or/and end dates of the element, all parents\nare automatically extended to the previous/next fiscal year.\n\n__Available Since:__ 1.0",
        "operationId" : "PeriodRestApi-POST_create",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "ID of the element.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "AnnexPeriodDTO",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AnnexPeriodDTO"
              },
              "example" : "{\n  \"startDate\" : \"2017-06-20\",\n  \"endDate\" : \"2017-09-17\",\n  \"categoryId\" : 4,\n  \"name\" : \"Timeline New\"\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnexPeriodDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/period/node/{nodeId}/tree/{treeId}" : {
      "get" : {
        "tags" : [ "PeriodRestApi" ],
        "description" : "Returns period data of node for given tree(year)\n\n__Available Since:__ 1.0",
        "operationId" : "PeriodRestApi-GET_getPeriodsBy",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "treeId",
          "in" : "path",
          "description" : "tree id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "getByCriteria",
          "in" : "query",
          "description" : "optional parameter. Allowed values - \"category\" and \"name\"",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "getByCriteriaValue",
          "in" : "query",
          "description" : "mandatory if @param getByCriteria is presented, allowed values - category id or period name",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "not required",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>AnnexPeriodDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AnnexPeriodPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"startDate\" : \"...\",\n    \"id\" : 12345,\n    \"endDate\" : \"...\",\n    \"categoryId\" : 12345,\n    \"name\" : \"...\"\n  }, {\n    \"startDate\" : \"...\",\n    \"id\" : 12345,\n    \"endDate\" : \"...\",\n    \"categoryId\" : 12345,\n    \"name\" : \"...\"\n  } ],\n  \"@type\" : \"annex\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/permissions/global/current-user" : {
      "get" : {
        "tags" : [ "PermissionRestApi" ],
        "description" : "\n\n__Available Since:__ 3.7",
        "operationId" : "PermissionRestApi-GET_getUserGlobalPermissions",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/permissions/node/{nodeId}" : {
      "get" : {
        "tags" : [ "PermissionRestApi" ],
        "description" : "\n\n__Available Since:__ 3.7",
        "operationId" : "PermissionRestApi-GET_getNodePermissions",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/permissions/rights/current-user" : {
      "get" : {
        "tags" : [ "PermissionRestApi" ],
        "description" : "\n\n__Available Since:__ 3.6",
        "operationId" : "PermissionRestApi-GET_getUserRights",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "deprecated" : true
      }
    },
    "/maps/rest/api/{version}/planned-month/{id}" : {
      "get" : {
        "tags" : [ "PlannedMonthBudgetRestApi" ],
        "description" : "\n\n__Available Since:__ 3.9",
        "operationId" : "PlannedMonthBudgetRestApi-GET_getPlannedBudget",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlannedMonthBudgetDTO"
                },
                "example" : "{\n  \"id\" : 12345,\n  \"month\" : 12345,\n  \"nodeId\" : 12345,\n  \"value\" : 12345.0,\n  \"publishDate\" : \"...\",\n  \"creationDate\" : \"...\",\n  \"additionalInfo\" : \"...\",\n  \"costType\" : \"...\",\n  \"initial\" : true\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "PlannedMonthBudgetRestApi" ],
        "description" : "Edit planned budget\n\n__Available Since:__ 1.0",
        "operationId" : "PlannedMonthBudgetRestApi-PUT_editPlannedBudget",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "planned budget id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "forseResize",
          "in" : "query",
          "description" : "set parameter to true to resize the node if required",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlannedMonthBudgetDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"month\" : 12345,\n  \"nodeId\" : 12345,\n  \"value\" : 12345.0,\n  \"publishDate\" : \"...\",\n  \"creationDate\" : \"...\",\n  \"additionalInfo\" : \"...\",\n  \"costType\" : \"...\",\n  \"initial\" : true\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "PlannedMonthBudgetRestApi" ],
        "description" : "\n\n__Available Since:__ 3.9",
        "operationId" : "PlannedMonthBudgetRestApi-DELETE_removePlannedBudget",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/planned-month/node/{nodeId}" : {
      "get" : {
        "tags" : [ "PlannedMonthBudgetRestApi" ],
        "description" : "Get planned month budgets for node\n\n__Available Since:__ 3.9",
        "operationId" : "PlannedMonthBudgetRestApi-GET_getPlannedOfNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>PlannedMonthBudgetDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlannedMonthBudgetPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"id\" : 12345,\n    \"month\" : 12345,\n    \"nodeId\" : 12345,\n    \"value\" : 12345.0,\n    \"publishDate\" : \"...\",\n    \"creationDate\" : \"...\",\n    \"additionalInfo\" : \"...\",\n    \"costType\" : \"...\",\n    \"initial\" : true\n  }, {\n    \"id\" : 12345,\n    \"month\" : 12345,\n    \"nodeId\" : 12345,\n    \"value\" : 12345.0,\n    \"publishDate\" : \"...\",\n    \"creationDate\" : \"...\",\n    \"additionalInfo\" : \"...\",\n    \"costType\" : \"...\",\n    \"initial\" : true\n  } ],\n  \"@type\" : \"planned-monthly-budget\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  } ]\n}"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PlannedMonthBudgetRestApi" ],
        "description" : "Add planned budget to node\n\n__Available Since:__ 1.0",
        "operationId" : "PlannedMonthBudgetRestApi-POST_create",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "forseResize",
          "in" : "query",
          "description" : "set parameter to true to resize the node if required",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlannedMonthBudgetDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"month\" : 12345,\n  \"nodeId\" : 12345,\n  \"value\" : 12345.0,\n  \"publishDate\" : \"...\",\n  \"creationDate\" : \"...\",\n  \"additionalInfo\" : \"...\",\n  \"costType\" : \"...\",\n  \"initial\" : true\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlannedMonthBudgetDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/planned-year/{id}" : {
      "get" : {
        "tags" : [ "PlannedYearBudgetRestApi" ],
        "description" : "\n\n__Available Since:__ 3.9",
        "operationId" : "PlannedYearBudgetRestApi-GET_getPlannedBudget",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlannedYearBudgetDTO"
                },
                "example" : "{\n  \"id\" : 12345,\n  \"treeId\" : 12345,\n  \"nodeId\" : 12345,\n  \"value\" : 12345.0,\n  \"publishDate\" : \"...\",\n  \"creationDate\" : \"...\",\n  \"additionalInfo\" : \"...\",\n  \"costType\" : \"...\",\n  \"initial\" : true\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "PlannedYearBudgetRestApi" ],
        "description" : "Edit planned budget\n\n__Available Since:__ 1.0",
        "operationId" : "PlannedYearBudgetRestApi-PUT_editPlannedBudget",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "planned budget id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "forseResize",
          "in" : "query",
          "description" : "set parameter to true to resize the node if required",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlannedYearBudgetDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"treeId\" : 12345,\n  \"nodeId\" : 12345,\n  \"value\" : 12345.0,\n  \"publishDate\" : \"...\",\n  \"creationDate\" : \"...\",\n  \"additionalInfo\" : \"...\",\n  \"costType\" : \"...\",\n  \"initial\" : true\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "PlannedYearBudgetRestApi" ],
        "description" : "\n\n__Available Since:__ 3.9",
        "operationId" : "PlannedYearBudgetRestApi-DELETE_removePlannedBudget",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/planned-year/node/{nodeId}" : {
      "get" : {
        "tags" : [ "PlannedYearBudgetRestApi" ],
        "description" : "Get planned year budgets for node\n\n__Available Since:__ 3.9",
        "operationId" : "PlannedYearBudgetRestApi-GET_getPlannedOfNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>PlannedYearBudgetDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlannedYearBudgetPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"id\" : 12345,\n    \"treeId\" : 12345,\n    \"nodeId\" : 12345,\n    \"value\" : 12345.0,\n    \"publishDate\" : \"...\",\n    \"creationDate\" : \"...\",\n    \"additionalInfo\" : \"...\",\n    \"costType\" : \"...\",\n    \"initial\" : true\n  }, {\n    \"id\" : 12345,\n    \"treeId\" : 12345,\n    \"nodeId\" : 12345,\n    \"value\" : 12345.0,\n    \"publishDate\" : \"...\",\n    \"creationDate\" : \"...\",\n    \"additionalInfo\" : \"...\",\n    \"costType\" : \"...\",\n    \"initial\" : true\n  } ],\n  \"@type\" : \"planned-early-budget\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  } ]\n}"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "PlannedYearBudgetRestApi" ],
        "description" : "Add planned budget to node\n\n__Available Since:__ 1.0",
        "operationId" : "PlannedYearBudgetRestApi-POST_create",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "forseResize",
          "in" : "query",
          "description" : "set parameter to true to resize the node if required",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlannedYearBudgetDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"treeId\" : 12345,\n  \"nodeId\" : 12345,\n  \"value\" : 12345.0,\n  \"publishDate\" : \"...\",\n  \"creationDate\" : \"...\",\n  \"additionalInfo\" : \"...\",\n  \"costType\" : \"...\",\n  \"initial\" : true\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlannedYearBudgetDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/sunk-cost/{id}" : {
      "get" : {
        "tags" : [ "SunkCostRestApi" ],
        "description" : "This method provides information of a given PO Id.\n\n__Available Since:__ 1.0",
        "operationId" : "SunkCostRestApi-GET_getSunkCost",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the PO.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SunkCostDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SunkCostDTO"
                },
                "example" : "{\n  \"id\" : 12345,\n  \"splitId\" : 12345,\n  \"date\" : \"...\",\n  \"name\" : \"...\",\n  \"jobNumber\" : \"...\",\n  \"amount\" : 12345.0,\n  \"respPerson\" : \"...\",\n  \"info\" : \"...\",\n  \"costCenter\" : \"...\",\n  \"costType\" : \"...\",\n  \"supplier\" : \"...\",\n  \"refNumber\" : \"...\",\n  \"closed\" : true,\n  \"type\" : \"BLANKET\",\n  \"maxValue\" : 12345.0,\n  \"remainingValue\" : 12345.0,\n  \"blanketOrderId\" : 12345,\n  \"nodeId\" : 12345,\n  \"creatorUserId\" : 12345,\n  \"creationDate\" : \"...\",\n  \"node\" : {\n    \"parentId\" : 12345,\n    \"startDate\" : \"...\",\n    \"endDate\" : \"...\",\n    \"currencyId\" : 12345,\n    \"externalId\" : \"...\",\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"info\" : \"...\",\n    \"respPerson\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"leaf\" : true,\n    \"nodeTypeId\" : 12345,\n    \"ancestors\" : [ {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    }, {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    } ]\n  }\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "SunkCostRestApi" ],
        "description" : "Edit sunk cost\n\n__Available Since:__ 1.0",
        "operationId" : "SunkCostRestApi-PUT_editSunkCost",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "sunk cost id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "forseResize",
          "in" : "query",
          "description" : "set parameter to true to resize the node if required",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "SunkCostDTO",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SunkCostDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"splitId\" : 12345,\n  \"date\" : \"...\",\n  \"name\" : \"...\",\n  \"jobNumber\" : \"...\",\n  \"amount\" : 12345.0,\n  \"respPerson\" : \"...\",\n  \"info\" : \"...\",\n  \"costCenter\" : \"...\",\n  \"costType\" : \"...\",\n  \"supplier\" : \"...\",\n  \"refNumber\" : \"...\",\n  \"closed\" : true,\n  \"type\" : \"RELEASE\",\n  \"maxValue\" : 12345.0,\n  \"remainingValue\" : 12345.0,\n  \"blanketOrderId\" : 12345,\n  \"nodeId\" : 12345,\n  \"creatorUserId\" : 12345,\n  \"creationDate\" : \"...\",\n  \"node\" : {\n    \"parentId\" : 12345,\n    \"startDate\" : \"...\",\n    \"endDate\" : \"...\",\n    \"currencyId\" : 12345,\n    \"externalId\" : \"...\",\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"info\" : \"...\",\n    \"respPerson\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"leaf\" : true,\n    \"nodeTypeId\" : 12345,\n    \"ancestors\" : [ {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    }, {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    } ]\n  }\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "SunkCostRestApi" ],
        "description" : "This method deletes an existing PO.\n\n__Available Since:__ 1.0",
        "operationId" : "SunkCostRestApi-DELETE_removeSunkCost",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the PO.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/sunk-cost/link/{sunkCostId}" : {
      "put" : {
        "tags" : [ "SunkCostRestApi" ],
        "description" : "Link invoices to sunk cost\n\n__Available Since:__ 1.0",
        "operationId" : "SunkCostRestApi-PUT_linkInvoiceToSunkCost",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sunkCostId",
          "in" : "path",
          "description" : "sunk cost id to link invoices to",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "array of invoice ids to add to the sunk cost",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/sunk-cost/linkAttachment/{sunkCostId}" : {
      "put" : {
        "tags" : [ "SunkCostRestApi" ],
        "description" : "\n\n__Available Since:__ 1.1",
        "operationId" : "SunkCostRestApi-PUT_linkInvoiceToAttachment",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sunkCostId",
          "in" : "path",
          "description" : "sunk cost to which to link",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "attachment to link to the sunk cost",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "201"
          }
        }
      }
    },
    "/maps/rest/api/{version}/sunk-cost/node/{nodeId}" : {
      "get" : {
        "tags" : [ "SunkCostRestApi" ],
        "description" : "Returns sunk costs of node paginated.\n\n__Available Since:__ 1.0",
        "operationId" : "SunkCostRestApi-GET_getSunkCostsOfNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "not required",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SunkCostPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"id\" : 12345,\n    \"splitId\" : 12345,\n    \"date\" : \"...\",\n    \"name\" : \"...\",\n    \"jobNumber\" : \"...\",\n    \"amount\" : 12345.0,\n    \"respPerson\" : \"...\",\n    \"info\" : \"...\",\n    \"costCenter\" : \"...\",\n    \"costType\" : \"...\",\n    \"supplier\" : \"...\",\n    \"refNumber\" : \"...\",\n    \"closed\" : true,\n    \"type\" : \"RELEASE\",\n    \"maxValue\" : 12345.0,\n    \"remainingValue\" : 12345.0,\n    \"blanketOrderId\" : 12345,\n    \"nodeId\" : 12345,\n    \"creatorUserId\" : 12345,\n    \"creationDate\" : \"...\",\n    \"node\" : {\n      \"parentId\" : 12345,\n      \"startDate\" : \"...\",\n      \"endDate\" : \"...\",\n      \"currencyId\" : 12345,\n      \"externalId\" : \"...\",\n      \"id\" : 12345,\n      \"name\" : \"...\",\n      \"info\" : \"...\",\n      \"respPerson\" : { },\n      \"leaf\" : true,\n      \"nodeTypeId\" : 12345,\n      \"ancestors\" : [ { }, { } ]\n    }\n  }, {\n    \"id\" : 12345,\n    \"splitId\" : 12345,\n    \"date\" : \"...\",\n    \"name\" : \"...\",\n    \"jobNumber\" : \"...\",\n    \"amount\" : 12345.0,\n    \"respPerson\" : \"...\",\n    \"info\" : \"...\",\n    \"costCenter\" : \"...\",\n    \"costType\" : \"...\",\n    \"supplier\" : \"...\",\n    \"refNumber\" : \"...\",\n    \"closed\" : true,\n    \"type\" : \"RELEASE\",\n    \"maxValue\" : 12345.0,\n    \"remainingValue\" : 12345.0,\n    \"blanketOrderId\" : 12345,\n    \"nodeId\" : 12345,\n    \"creatorUserId\" : 12345,\n    \"creationDate\" : \"...\",\n    \"node\" : {\n      \"parentId\" : 12345,\n      \"startDate\" : \"...\",\n      \"endDate\" : \"...\",\n      \"currencyId\" : 12345,\n      \"externalId\" : \"...\",\n      \"id\" : 12345,\n      \"name\" : \"...\",\n      \"info\" : \"...\",\n      \"respPerson\" : { },\n      \"leaf\" : true,\n      \"nodeTypeId\" : 12345,\n      \"ancestors\" : [ { }, { } ]\n    }\n  } ],\n  \"@type\" : \"sunk-cost\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "SunkCostRestApi" ],
        "description" : "Add sunk cost to node\n\n__Available Since:__ 1.0",
        "operationId" : "SunkCostRestApi-POST_create",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "forseResize",
          "in" : "query",
          "description" : "set parameter to true to resize the node if required",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "SunkCostDTO",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SunkCostDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"splitId\" : 12345,\n  \"date\" : \"...\",\n  \"name\" : \"...\",\n  \"jobNumber\" : \"...\",\n  \"amount\" : 12345.0,\n  \"respPerson\" : \"...\",\n  \"info\" : \"...\",\n  \"costCenter\" : \"...\",\n  \"costType\" : \"...\",\n  \"supplier\" : \"...\",\n  \"refNumber\" : \"...\",\n  \"closed\" : true,\n  \"type\" : \"BLANKET\",\n  \"maxValue\" : 12345.0,\n  \"remainingValue\" : 12345.0,\n  \"blanketOrderId\" : 12345,\n  \"nodeId\" : 12345,\n  \"creatorUserId\" : 12345,\n  \"creationDate\" : \"...\",\n  \"node\" : {\n    \"parentId\" : 12345,\n    \"startDate\" : \"...\",\n    \"endDate\" : \"...\",\n    \"currencyId\" : 12345,\n    \"externalId\" : \"...\",\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"info\" : \"...\",\n    \"respPerson\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"leaf\" : true,\n    \"nodeTypeId\" : 12345,\n    \"ancestors\" : [ {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    }, {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    } ]\n  }\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SunkCostDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/sunk-cost/split/{sourceSunkCostId}" : {
      "post" : {
        "tags" : [ "SunkCostRestApi" ],
        "description" : "Split sunk cost with id sourceSunkCostId\n\n__Available Since:__ 3.11",
        "operationId" : "SunkCostRestApi-POST_splitSunkCosts",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sourceSunkCostId",
          "in" : "path",
          "description" : "id of the source sunk cost to split",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "list of sunk costs in which the source is split - required fields are date, amount, node_id - all other fields are ignored. The source PO must be inside this list with it's updated value and it's the only one that must have the ID field filled - it must be the same as sourceSunkCostId",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/SunkCostDTO"
                }
              },
              "example" : "[ {\n  \"id\" : 852,\n  \"nodeId\" : 6113,\n  \"amount\" : 200,\n  \"date\" : \"2022-02-04\"\n}, {\n  \"nodeId\" : 6114,\n  \"amount\" : 500,\n  \"date\" : \"2022-03-04\"\n}, {\n  \"nodeId\" : 6115,\n  \"amount\" : 300,\n  \"date\" : \"2022-04-04\"\n} ]"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201"
          }
        }
      }
    },
    "/maps/rest/api/{version}/sunk-cost/split/{splitId}" : {
      "get" : {
        "tags" : [ "SunkCostRestApi" ],
        "description" : "Returns all sunk costs related to the provided splitId\n\n__Available Since:__ 3.11",
        "operationId" : "SunkCostRestApi-GET_getSplitSunkCosts",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "splitId",
          "in" : "path",
          "description" : "common id for the split PO group",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SplitSunkCostDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SplitSunkCostDTO"
                },
                "example" : "{\n  \"totalValueNoAccess\" : 12345.0,\n  \"totalValue\" : 12345.0,\n  \"creatorUserId\" : 12345,\n  \"creationDate\" : \"...\",\n  \"inReference\" : true,\n  \"sunkCosts\" : [ {\n    \"id\" : 12345,\n    \"splitId\" : 12345,\n    \"date\" : \"...\",\n    \"name\" : \"...\",\n    \"jobNumber\" : \"...\",\n    \"amount\" : 12345.0,\n    \"respPerson\" : \"...\",\n    \"info\" : \"...\",\n    \"costCenter\" : \"...\",\n    \"costType\" : \"...\",\n    \"supplier\" : \"...\",\n    \"refNumber\" : \"...\",\n    \"closed\" : true,\n    \"type\" : \"PURCHASE\",\n    \"maxValue\" : 12345.0,\n    \"remainingValue\" : 12345.0,\n    \"blanketOrderId\" : 12345,\n    \"nodeId\" : 12345,\n    \"creatorUserId\" : 12345,\n    \"creationDate\" : \"...\",\n    \"node\" : {\n      \"parentId\" : 12345,\n      \"startDate\" : \"...\",\n      \"endDate\" : \"...\",\n      \"currencyId\" : 12345,\n      \"externalId\" : \"...\",\n      \"id\" : 12345,\n      \"name\" : \"...\",\n      \"info\" : \"...\",\n      \"respPerson\" : { },\n      \"leaf\" : true,\n      \"nodeTypeId\" : 12345,\n      \"ancestors\" : [ { }, { } ]\n    }\n  }, {\n    \"id\" : 12345,\n    \"splitId\" : 12345,\n    \"date\" : \"...\",\n    \"name\" : \"...\",\n    \"jobNumber\" : \"...\",\n    \"amount\" : 12345.0,\n    \"respPerson\" : \"...\",\n    \"info\" : \"...\",\n    \"costCenter\" : \"...\",\n    \"costType\" : \"...\",\n    \"supplier\" : \"...\",\n    \"refNumber\" : \"...\",\n    \"closed\" : true,\n    \"type\" : \"PURCHASE\",\n    \"maxValue\" : 12345.0,\n    \"remainingValue\" : 12345.0,\n    \"blanketOrderId\" : 12345,\n    \"nodeId\" : 12345,\n    \"creatorUserId\" : 12345,\n    \"creationDate\" : \"...\",\n    \"node\" : {\n      \"parentId\" : 12345,\n      \"startDate\" : \"...\",\n      \"endDate\" : \"...\",\n      \"currencyId\" : 12345,\n      \"externalId\" : \"...\",\n      \"id\" : 12345,\n      \"name\" : \"...\",\n      \"info\" : \"...\",\n      \"respPerson\" : { },\n      \"leaf\" : true,\n      \"nodeTypeId\" : 12345,\n      \"ancestors\" : [ { }, { } ]\n    }\n  } ],\n  \"currency\" : {\n    \"id\" : 12345,\n    \"shortName\" : \"...\",\n    \"symbol\" : \"...\"\n  },\n  \"user\" : {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  }\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/sunk-cost/unlink/{sunkCostId}" : {
      "put" : {
        "tags" : [ "SunkCostRestApi" ],
        "description" : "Unlink invoices from sunk cost\n\n__Available Since:__ 1.0",
        "operationId" : "SunkCostRestApi-PUT_unlinkInvoiceToSunkCost",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sunkCostId",
          "in" : "path",
          "description" : "sunk cost id to unlink invoices from",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "array of invoice id to unlink from the sunk cost",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/sunk-cost/linked/invoice/{invoiceId}" : {
      "get" : {
        "tags" : [ "SunkCostRestApi" ],
        "description" : "This method provides information of linked PO to a given invoice id.\n\n__Available Since:__ 1.0",
        "operationId" : "SunkCostRestApi-GET_getLinkedSunkCostToInvoice",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceId",
          "in" : "path",
          "description" : "ID of the invoice.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SunkCostDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SunkCostDTO"
                },
                "example" : "{\n  \"id\" : 12345,\n  \"splitId\" : 12345,\n  \"date\" : \"...\",\n  \"name\" : \"...\",\n  \"jobNumber\" : \"...\",\n  \"amount\" : 12345.0,\n  \"respPerson\" : \"...\",\n  \"info\" : \"...\",\n  \"costCenter\" : \"...\",\n  \"costType\" : \"...\",\n  \"supplier\" : \"...\",\n  \"refNumber\" : \"...\",\n  \"closed\" : true,\n  \"type\" : \"RELEASE\",\n  \"maxValue\" : 12345.0,\n  \"remainingValue\" : 12345.0,\n  \"blanketOrderId\" : 12345,\n  \"nodeId\" : 12345,\n  \"creatorUserId\" : 12345,\n  \"creationDate\" : \"...\",\n  \"node\" : {\n    \"parentId\" : 12345,\n    \"startDate\" : \"...\",\n    \"endDate\" : \"...\",\n    \"currencyId\" : 12345,\n    \"externalId\" : \"...\",\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"info\" : \"...\",\n    \"respPerson\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"leaf\" : true,\n    \"nodeTypeId\" : 12345,\n    \"ancestors\" : [ {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    }, {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    } ]\n  }\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/sunk-cost/release/blanket/{id}" : {
      "get" : {
        "tags" : [ "SunkCostRestApi" ],
        "description" : "\n\n__Available Since:__ 3.9",
        "operationId" : "SunkCostRestApi-GET_getReleaseSunkCosts",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "- blanket sunk cost id for which to return the release sunkCosts",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "not required",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SunkCostPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"id\" : 12345,\n    \"splitId\" : 12345,\n    \"date\" : \"...\",\n    \"name\" : \"...\",\n    \"jobNumber\" : \"...\",\n    \"amount\" : 12345.0,\n    \"respPerson\" : \"...\",\n    \"info\" : \"...\",\n    \"costCenter\" : \"...\",\n    \"costType\" : \"...\",\n    \"supplier\" : \"...\",\n    \"refNumber\" : \"...\",\n    \"closed\" : true,\n    \"type\" : \"PURCHASE\",\n    \"maxValue\" : 12345.0,\n    \"remainingValue\" : 12345.0,\n    \"blanketOrderId\" : 12345,\n    \"nodeId\" : 12345,\n    \"creatorUserId\" : 12345,\n    \"creationDate\" : \"...\",\n    \"node\" : {\n      \"parentId\" : 12345,\n      \"startDate\" : \"...\",\n      \"endDate\" : \"...\",\n      \"currencyId\" : 12345,\n      \"externalId\" : \"...\",\n      \"id\" : 12345,\n      \"name\" : \"...\",\n      \"info\" : \"...\",\n      \"respPerson\" : { },\n      \"leaf\" : true,\n      \"nodeTypeId\" : 12345,\n      \"ancestors\" : [ { }, { } ]\n    }\n  }, {\n    \"id\" : 12345,\n    \"splitId\" : 12345,\n    \"date\" : \"...\",\n    \"name\" : \"...\",\n    \"jobNumber\" : \"...\",\n    \"amount\" : 12345.0,\n    \"respPerson\" : \"...\",\n    \"info\" : \"...\",\n    \"costCenter\" : \"...\",\n    \"costType\" : \"...\",\n    \"supplier\" : \"...\",\n    \"refNumber\" : \"...\",\n    \"closed\" : true,\n    \"type\" : \"BLANKET\",\n    \"maxValue\" : 12345.0,\n    \"remainingValue\" : 12345.0,\n    \"blanketOrderId\" : 12345,\n    \"nodeId\" : 12345,\n    \"creatorUserId\" : 12345,\n    \"creationDate\" : \"...\",\n    \"node\" : {\n      \"parentId\" : 12345,\n      \"startDate\" : \"...\",\n      \"endDate\" : \"...\",\n      \"currencyId\" : 12345,\n      \"externalId\" : \"...\",\n      \"id\" : 12345,\n      \"name\" : \"...\",\n      \"info\" : \"...\",\n      \"respPerson\" : { },\n      \"leaf\" : true,\n      \"nodeTypeId\" : 12345,\n      \"ancestors\" : [ { }, { } ]\n    }\n  } ],\n  \"@type\" : \"sunk-cost\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/target-budget/{id}" : {
      "get" : {
        "tags" : [ "TargetBudgetRestApi" ],
        "description" : "\n\n__Available Since:__ 3.6",
        "operationId" : "TargetBudgetRestApi-GET_getTargetBudget",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TargetBudgetDTO"
                },
                "example" : "{\n  \"id\" : 12345,\n  \"date\" : \"...\",\n  \"name\" : \"...\",\n  \"amount\" : 12345.0,\n  \"costType\" : \"...\",\n  \"creationDate\" : \"...\",\n  \"month\" : 12345,\n  \"nodeId\" : 12345,\n  \"initial\" : true\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "TargetBudgetRestApi" ],
        "description" : "Edit target budget\n\n__Available Since:__ 3.6",
        "operationId" : "TargetBudgetRestApi-PUT_editTargetBudget",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "target budget id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "forceResize",
          "in" : "query",
          "description" : "set parameter to true to resize the node if required",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TargetBudgetDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"date\" : \"...\",\n  \"name\" : \"...\",\n  \"amount\" : 12345.0,\n  \"costType\" : \"...\",\n  \"creationDate\" : \"...\",\n  \"month\" : 12345,\n  \"nodeId\" : 12345,\n  \"initial\" : true\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "TargetBudgetRestApi" ],
        "description" : "\n\n__Available Since:__ 3.6",
        "operationId" : "TargetBudgetRestApi-DELETE_removeTargetBudget",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/target-budget/node/{nodeId}" : {
      "get" : {
        "tags" : [ "TargetBudgetRestApi" ],
        "description" : "Returns target budgets of node paginated.\n\n__Available Since:__ 3.6",
        "operationId" : "TargetBudgetRestApi-GET_getTargetBudgetsOfNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "not required",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TargetBudgetPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"id\" : 12345,\n    \"date\" : \"...\",\n    \"name\" : \"...\",\n    \"amount\" : 12345.0,\n    \"costType\" : \"...\",\n    \"creationDate\" : \"...\",\n    \"month\" : 12345,\n    \"nodeId\" : 12345,\n    \"initial\" : true\n  }, {\n    \"id\" : 12345,\n    \"date\" : \"...\",\n    \"name\" : \"...\",\n    \"amount\" : 12345.0,\n    \"costType\" : \"...\",\n    \"creationDate\" : \"...\",\n    \"month\" : 12345,\n    \"nodeId\" : 12345,\n    \"initial\" : true\n  } ],\n  \"@type\" : \"target-budget\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "TargetBudgetRestApi" ],
        "description" : "Add target budget to node\n\n__Available Since:__ 3.6",
        "operationId" : "TargetBudgetRestApi-POST_create",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "forceResize",
          "in" : "query",
          "description" : "set parameter to true to resize the node if required",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TargetBudgetDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"date\" : \"...\",\n  \"name\" : \"...\",\n  \"amount\" : 12345.0,\n  \"costType\" : \"...\",\n  \"creationDate\" : \"...\",\n  \"month\" : 12345,\n  \"nodeId\" : 12345,\n  \"initial\" : true\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TargetBudgetDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/target-year/{id}" : {
      "get" : {
        "tags" : [ "TargetYearBudgetRestApi" ],
        "description" : "\n\n__Available Since:__ 3.10",
        "operationId" : "TargetYearBudgetRestApi-GET_getTargetBudget",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TargetYearBudgetDTO"
                },
                "example" : "{\n  \"id\" : 12345,\n  \"treeId\" : 12345,\n  \"nodeId\" : 12345,\n  \"value\" : 12345.0,\n  \"publishDate\" : \"...\",\n  \"creationDate\" : \"...\",\n  \"additionalInfo\" : \"...\",\n  \"costType\" : \"...\",\n  \"initial\" : true\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "TargetYearBudgetRestApi" ],
        "description" : "Edit target budget\n\n__Available Since:__ 3.10",
        "operationId" : "TargetYearBudgetRestApi-PUT_editTargetBudget",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "target budget id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "forseResize",
          "in" : "query",
          "description" : "set parameter to true to resize the node if required",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TargetYearBudgetDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"treeId\" : 12345,\n  \"nodeId\" : 12345,\n  \"value\" : 12345.0,\n  \"publishDate\" : \"...\",\n  \"creationDate\" : \"...\",\n  \"additionalInfo\" : \"...\",\n  \"costType\" : \"...\",\n  \"initial\" : true\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "TargetYearBudgetRestApi" ],
        "description" : "\n\n__Available Since:__ 3.10",
        "operationId" : "TargetYearBudgetRestApi-DELETE_removeTargetBudget",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/target-year/node/{nodeId}" : {
      "get" : {
        "tags" : [ "TargetYearBudgetRestApi" ],
        "description" : "Get target year budgets for node\n\n__Available Since:__ 3.10",
        "operationId" : "TargetYearBudgetRestApi-GET_getTargetOfNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>TargetYearBudgetDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TargetYearBudgetPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"id\" : 12345,\n    \"treeId\" : 12345,\n    \"nodeId\" : 12345,\n    \"value\" : 12345.0,\n    \"publishDate\" : \"...\",\n    \"creationDate\" : \"...\",\n    \"additionalInfo\" : \"...\",\n    \"costType\" : \"...\",\n    \"initial\" : true\n  }, {\n    \"id\" : 12345,\n    \"treeId\" : 12345,\n    \"nodeId\" : 12345,\n    \"value\" : 12345.0,\n    \"publishDate\" : \"...\",\n    \"creationDate\" : \"...\",\n    \"additionalInfo\" : \"...\",\n    \"costType\" : \"...\",\n    \"initial\" : true\n  } ],\n  \"@type\" : \"TargetYearBudgetPageDTO\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  } ]\n}"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "TargetYearBudgetRestApi" ],
        "description" : "Add target budget to node\n\n__Available Since:__ 3.10",
        "operationId" : "TargetYearBudgetRestApi-POST_create",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "forseResize",
          "in" : "query",
          "description" : "set parameter to true to resize the node if required",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TargetYearBudgetDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"treeId\" : 12345,\n  \"nodeId\" : 12345,\n  \"value\" : 12345.0,\n  \"publishDate\" : \"...\",\n  \"creationDate\" : \"...\",\n  \"additionalInfo\" : \"...\",\n  \"costType\" : \"...\",\n  \"initial\" : true\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TargetYearBudgetDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/task/changes" : {
      "get" : {
        "tags" : [ "TaskRestApi" ],
        "description" : "This method provides a list with information about all tasks in Marketing Planner. Each\nrevision returns max. 500 tasks. Use the revision parameter several times obtain\ninformation on all all tasks. The revision parameter can be also used as a history\nparameter to return tasks which have been modified or deleted since the last given\nversion.\n\n__Available Since:__ 1.0",
        "operationId" : "TaskRestApi-GET_getTasksChanges",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "revision",
          "in" : "query",
          "description" : "(Optional) ID of the revision.",
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "TasksRevisionChangesDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TasksRevisionChangesDTO"
                },
                "example" : "{\n  \"revision\" : 12345,\n  \"modified\" : [ {\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"date\" : \"...\",\n    \"state\" : \"PAUSED\",\n    \"markerType\" : 12345,\n    \"responsibleUser\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"info\" : \"...\",\n    \"jobId\" : 12345,\n    \"nodeId\" : 12345\n  }, {\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"date\" : \"...\",\n    \"state\" : \"DONE\",\n    \"markerType\" : 12345,\n    \"responsibleUser\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"info\" : \"...\",\n    \"jobId\" : 12345,\n    \"nodeId\" : 12345\n  } ],\n  \"deleted\" : [ 12345, 12345 ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/task/user-assigned" : {
      "get" : {
        "tags" : [ "TaskRestApi" ],
        "description" : "Returns the tasks of the user where the user is assigned like responsible user\n\n__Available Since:__ 3.1",
        "operationId" : "TaskRestApi-GET_getAssignedTasks",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeStatuses",
          "in" : "query",
          "description" : "- optional, Task statuses to be included",
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "OPEN", "DONE", "PLANNED", "PAUSED", "CANCELLED", "IN_PROGRESS" ]
            }
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "treeId",
          "in" : "query",
          "description" : "- optional. If provided, only the nodes within the tree is returned",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>TaskDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"date\" : \"...\",\n    \"state\" : \"DONE\",\n    \"markerType\" : 12345,\n    \"responsibleUser\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"info\" : \"...\",\n    \"jobId\" : 12345,\n    \"nodeId\" : 12345\n  }, {\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"date\" : \"...\",\n    \"state\" : \"PAUSED\",\n    \"markerType\" : 12345,\n    \"responsibleUser\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"info\" : \"...\",\n    \"jobId\" : 12345,\n    \"nodeId\" : 12345\n  } ],\n  \"@type\" : \"task\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/task/{taskId}" : {
      "get" : {
        "tags" : [ "TaskRestApi" ],
        "description" : "This method provides a list of allowed users which can be set e.g. as a responsible\nperson on a task.\n\n__Available Since:__ 1.0",
        "operationId" : "TaskRestApi-GET_getTask",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "ID of the task.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "TaskDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskDTO"
                },
                "example" : "{\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"date\" : \"...\",\n  \"state\" : \"PLANNED\",\n  \"markerType\" : 12345,\n  \"responsibleUser\" : {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  },\n  \"info\" : \"...\",\n  \"jobId\" : 12345,\n  \"nodeId\" : 12345\n}"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "TaskRestApi" ],
        "description" : "Edit task\n\n__Available Since:__ 1.0",
        "operationId" : "TaskRestApi-PUT_editTask",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "task id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "forseResize",
          "in" : "query",
          "description" : "set parameter to true to resize the node if required",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "request body\n- for property taskState see allowed values - \"/task/statuses\"\n- for property markerType see allowed values  - \"/marker\"",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EditTaskRequestBody"
              },
              "example" : "{\n  \"responsibleUser\" : {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  },\n  \"markerType\" : 12345,\n  \"name\" : \"...\",\n  \"date\" : \"...\",\n  \"state\" : \"...\",\n  \"info\" : \"...\"\n}"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "TaskRestApi" ],
        "description" : "Remove task\n\n__Available Since:__ 1.0",
        "operationId" : "TaskRestApi-DELETE_deleteTask",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "ID of the task.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "cancelJob",
          "in" : "query",
          "description" : "default is true.If the task is managed task and don't want to delete the job manager's job set this param to false",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/task/node/{nodeId}" : {
      "get" : {
        "tags" : [ "TaskRestApi" ],
        "description" : "Returns tasks and managed tasks of node paginated. Sort options are not available\n\n__Available Since:__ 1.0",
        "operationId" : "TaskRestApi-GET_getTasksOfNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "not required",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>TaskDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"date\" : \"...\",\n    \"state\" : \"IN_PROGRESS\",\n    \"markerType\" : 12345,\n    \"responsibleUser\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"info\" : \"...\",\n    \"jobId\" : 12345,\n    \"nodeId\" : 12345\n  }, {\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"date\" : \"...\",\n    \"state\" : \"OPEN\",\n    \"markerType\" : 12345,\n    \"responsibleUser\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"info\" : \"...\",\n    \"jobId\" : 12345,\n    \"nodeId\" : 12345\n  } ],\n  \"@type\" : \"task\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "TaskRestApi" ],
        "description" : "Creates task\n\n__Available Since:__ 1.0",
        "operationId" : "TaskRestApi-POST_create",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "forseResize",
          "in" : "query",
          "description" : "set parameter to true to resize the node if required",
          "required" : true,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TaskDTO"
              },
              "example" : "{\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"date\" : \"...\",\n  \"state\" : \"CANCELLED\",\n  \"markerType\" : 12345,\n  \"responsibleUser\" : {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  },\n  \"info\" : \"...\",\n  \"jobId\" : 12345,\n  \"nodeId\" : 12345\n}"
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "201",
            "content" : {
              "*/*" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskDTO"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/task/node/{nodeId}/status/{status}/date/{date}" : {
      "get" : {
        "tags" : [ "TaskRestApi" ],
        "description" : "Returns tasks and managed tasks of node by date and status, paginated. Sort options are not available\n\n__Available Since:__ 1.0",
        "operationId" : "TaskRestApi-GET_getTasksOfNodeByDateStatus",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "path",
          "description" : "task date in format yyyy-MM-dd",
          "required" : true,
          "schema" : {
            "type" : "string",
            "format" : "date"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "node id",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "status",
          "in" : "path",
          "description" : "page status - open,done, etc.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "not required",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>TaskDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TaskPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"date\" : \"...\",\n    \"state\" : \"OPEN\",\n    \"markerType\" : 12345,\n    \"responsibleUser\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"info\" : \"...\",\n    \"jobId\" : 12345,\n    \"nodeId\" : 12345\n  }, {\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"date\" : \"...\",\n    \"state\" : \"PAUSED\",\n    \"markerType\" : 12345,\n    \"responsibleUser\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"info\" : \"...\",\n    \"jobId\" : 12345,\n    \"nodeId\" : 12345\n  } ],\n  \"@type\" : \"task\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/tree" : {
      "get" : {
        "tags" : [ "TreeRestApi" ],
        "description" : "This method provides a list of created years and information about tree-id, name,\nreference currency, planningType, yearType, startDate and endDate.\n\n__Available Since:__ 1.0",
        "operationId" : "TreeRestApi-GET_getTrees",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of TreeDTO",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TreeDTO"
                  }
                },
                "example" : "[ {\n  \"id\" : 12345,\n  \"name\" : \"...\",\n  \"planningType\" : \"TOP_DOWN\",\n  \"startDate\" : \"...\",\n  \"endDate\" : \"...\",\n  \"currencyId\" : 12345\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/approver" : {
      "get" : {
        "tags" : [ "UserApproversRestApi" ],
        "description" : "This method returns all users defined as approvers in Marketing Planner.\n\n__Available Since:__ 3.3",
        "operationId" : "UserApproversRestApi-GET_getApprovers",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "(Optional)",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>UserDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  }, {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  } ],\n  \"@type\" : \"user\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/approver/{userId}" : {
      "put" : {
        "tags" : [ "UserApproversRestApi" ],
        "description" : "This method defines a user as approver\n\n__Available Since:__ 3.3",
        "operationId" : "UserApproversRestApi-PUT_setUserAsApprover",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of the user.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "UserApproversRestApi" ],
        "description" : "Remove assigment user to be approver.\nIf user was set as approver in some MDF, validation error will be throw.\n\n__Available Since:__ 3.3",
        "operationId" : "UserApproversRestApi-DELETE_removeUserAsApprover",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of the user.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/usergroups/all" : {
      "get" : {
        "tags" : [ "UserGroupsRestApi" ],
        "description" : "Returns All users with assigned user groups, <userId, list of assigned groups>\n\n__Available Since:__ 3.1",
        "operationId" : "UserGroupsRestApi-GET_getAllGroupsAndUsers",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Map <userId, List <GroupRolePair>>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "array",
                    "items" : {
                      "$ref" : "#/components/schemas/GroupRolePair"
                    }
                  }
                },
                "example" : "[ {\n  \"...\" : {\n    \"groupId\" : 12345,\n    \"roleId\" : 12345\n  }\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/usergroups/user/{userId}" : {
      "get" : {
        "tags" : [ "UserGroupsRestApi" ],
        "description" : "\n\n__Available Since:__ 3.1",
        "operationId" : "UserGroupsRestApi-GET_getGroupsForUser",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of the user.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "List of GroupRolePair",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GroupRolePair"
                  }
                },
                "example" : "[ {\n  \"groupId\" : 12345,\n  \"roleId\" : 12345\n} ]"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "UserGroupsRestApi" ],
        "description" : "\n\n__Available Since:__ 3.1",
        "operationId" : "UserGroupsRestApi-PUT_updateGroupsForUser",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of the user.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "requestBody" : {
          "description" : "List of GroupRolePair",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/GroupRolePair"
                }
              },
              "example" : "[ {\n  \"groupId\" : 12345,\n  \"roleId\" : 12345\n} ]"
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    },
    "/maps/rest/api/{version}/user/has-module-access" : {
      "get" : {
        "tags" : [ "UserRestApi" ],
        "description" : "Return if the user has access to Maps module, {'access':true/false}\n\n__Available Since:__ 3.1",
        "operationId" : "UserRestApi-GET_hasModuleAccess",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/user/has-data/{userId}" : {
      "get" : {
        "tags" : [ "UserRestApi" ],
        "description" : "check if given user has any data in application. This enpoint is just for internal use.\nAllow only 'admin' can use it.\n\n__Available Since:__ 3.1",
        "operationId" : "UserRestApi-GET_hasUserData",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "ID of the user.",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "true/false",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/user/write/attachments" : {
      "get" : {
        "tags" : [ "UserRestApi" ],
        "description" : "\n\n__Available Since:__ 1.1",
        "operationId" : "UserRestApi-GET_hasRightToAttach",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "true if the logged user has right to attach to any node",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/user/access/node/{nodeId}" : {
      "get" : {
        "tags" : [ "UserRestApi" ],
        "description" : "This method provides a list of allowed users which can be set e.g. as a responsible\nperson on an element.\n\n__Available Since:__ 1.0",
        "operationId" : "UserRestApi-GET_getUsersAccessibleNode",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "id of node",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "not required",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>UserDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  }, {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  } ],\n  \"@type\" : \"user\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/user/access/task/{taskId}" : {
      "get" : {
        "tags" : [ "UserRestApi" ],
        "description" : "This method provides a list of allowed users which can be set e.g. as a responsible\nperson on a task.\n\n__Available Since:__ 1.0",
        "operationId" : "UserRestApi-GET_getUsersAccessibleTask",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "taskId",
          "in" : "path",
          "description" : "id of task",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "not required",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>UserViewBase</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  }, {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  } ],\n  \"@type\" : \"user\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/view/public/all" : {
      "get" : {
        "tags" : [ "ViewRestApi" ],
        "description" : "Returns all public views\n\n__Available Since:__ 1.0",
        "operationId" : "ViewRestApi-GET_getPublicViewsWithoutRightCheck",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ViewDTO"
                  }
                },
                "example" : "[ {\n  \"viewId\" : 12345,\n  \"viewName\" : \"...\"\n} ]"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/watcher/user-assigned" : {
      "get" : {
        "tags" : [ "WatcherRestApi" ],
        "description" : "Returns all elements that a user watches\n\n__Available Since:__ 3.4",
        "operationId" : "WatcherRestApi-GET_getElements",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "optional",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "treeId",
          "in" : "query",
          "description" : "optional - for which tree id to return elements",
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "withAdditionalInfo",
          "in" : "query",
          "description" : "not required. If param exists with return <code>NodeDTO</code> with filled all fields",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>NodeDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NodePageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"parentId\" : 12345,\n    \"startDate\" : \"...\",\n    \"endDate\" : \"...\",\n    \"currencyId\" : 12345,\n    \"externalId\" : \"...\",\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"info\" : \"...\",\n    \"respPerson\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"leaf\" : true,\n    \"nodeTypeId\" : 12345,\n    \"ancestors\" : [ {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    }, {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    } ]\n  }, {\n    \"parentId\" : 12345,\n    \"startDate\" : \"...\",\n    \"endDate\" : \"...\",\n    \"currencyId\" : 12345,\n    \"externalId\" : \"...\",\n    \"id\" : 12345,\n    \"name\" : \"...\",\n    \"info\" : \"...\",\n    \"respPerson\" : {\n      \"userId\" : 12345,\n      \"firstName\" : \"...\",\n      \"lastName\" : \"...\",\n      \"login\" : \"...\"\n    },\n    \"leaf\" : true,\n    \"nodeTypeId\" : 12345,\n    \"ancestors\" : [ {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    }, {\n      \"id\" : 12345,\n      \"name\" : \"...\"\n    } ]\n  } ],\n  \"@type\" : \"node\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/watcher/node/{nodeId}" : {
      "get" : {
        "tags" : [ "WatcherRestApi" ],
        "description" : "Returns all watchers on an element. If the user has no rights READ, MANAGE_WATCHERS, exception will be thrown\n\n__Available Since:__ 3.4",
        "operationId" : "WatcherRestApi-GET_getWatchers",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "- id of element",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "- optional",
          "allowEmptyValue" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Page with <code>UserDTO</code>",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserPageDTO"
                },
                "example" : "{\n  \"content\" : [ {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  }, {\n    \"userId\" : 12345,\n    \"firstName\" : \"...\",\n    \"lastName\" : \"...\",\n    \"login\" : \"...\"\n  } ],\n  \"@type\" : \"user\",\n  \"offset\" : 12345,\n  \"limit\" : 12345,\n  \"pageNumber\" : 12345,\n  \"numberOfElements\" : 12345,\n  \"totalElements\" : 12345,\n  \"sort\" : [ {\n    \"property\" : \"...\",\n    \"direction\" : \"DESC\"\n  }, {\n    \"property\" : \"...\",\n    \"direction\" : \"ASC\"\n  } ]\n}"
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/watcher/node/{nodeId}/count" : {
      "get" : {
        "tags" : [ "WatcherRestApi" ],
        "description" : "Returns count of watchers on an element {\"count\": xXx}\n\n__Available Since:__ 3.8",
        "operationId" : "WatcherRestApi-GET_getWatchersCount",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "- id of element",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "integer",
                    "format" : "int64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/maps/rest/api/{version}/watcher/node/{nodeId}/user/{userId}" : {
      "put" : {
        "tags" : [ "WatcherRestApi" ],
        "description" : "Returns all elements that a user is watching\nAdd a user to watch an element. If the user has no right MANAGE_WATCHERS and is not adding his own id exception will be thrown\n\n__Available Since:__ 3.4",
        "operationId" : "WatcherRestApi-PUT_add",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "- id of element to watch",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "- id of user",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      },
      "delete" : {
        "tags" : [ "WatcherRestApi" ],
        "description" : "Remove a user from watching an element. If the user has no right MANAGE_WATCHERS and is not removing his own id exception will be thrown\n\n__Available Since:__ 3.4",
        "operationId" : "WatcherRestApi-DELETE_delete",
        "parameters" : [ {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "nodeId",
          "in" : "path",
          "description" : "- id of element to watch",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "userId",
          "in" : "path",
          "description" : "- id of user",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AccessType" : {
        "title" : "AccessType",
        "type" : "string",
        "enum" : [ "PUBLIC_ACCESS", "PRIVATE_ACCESS", "LIMITED_ACCESS" ]
      },
      "AnalysisType" : {
        "title" : "AnalysisType",
        "type" : "string",
        "enum" : [ "lessIsBetter", "moreIsBetter", "none" ]
      },
      "AncestorsDTO" : {
        "title" : "AncestorsDTO",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          }
        },
        "description" : "Created by alexander.yordanov on 2019-09-17."
      },
      "AnnexContentDTO" : {
        "title" : "AnnexContentDTO",
        "required" : [ "published" ],
        "type" : "object",
        "properties" : {
          "contentId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "text" : {
            "type" : "string"
          },
          "published" : {
            "type" : "boolean"
          }
        },
        "description" : "Created by alexander.yordanov on 2018-01-23."
      },
      "AnnexPeriodPageDTO" : {
        "title" : "AnnexPeriodPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AnnexPeriodDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "AnnexPeriodSearchResultDTO" : {
        "title" : "AnnexPeriodSearchResultDTO",
        "type" : "object",
        "properties" : {
          "object" : {
            "$ref" : "#/components/schemas/AnnexPeriodDTO"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SearchResultDTO"
        } ]
      },
      "AttachmentDTO" : {
        "title" : "AttachmentDTO",
        "type" : "object",
        "properties" : {
          "attachmentLink" : {
            "type" : "string"
          },
          "annexAttachmentId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "attachmentDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "attachmentFileName" : {
            "type" : "string"
          },
          "comment" : {
            "type" : "string"
          },
          "externalId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fileSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "source" : {
            "type" : "string"
          },
          "urlId" : {
            "type" : "string"
          }
        },
        "description" : "Created by alexander.yordanov on 2017-10-20."
      },
      "AttachmentRequestBody" : {
        "title" : "AttachmentRequestBody",
        "required" : [ "newWindow" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "comment" : {
            "type" : "string"
          },
          "link" : {
            "type" : "string"
          },
          "newWindow" : {
            "type" : "boolean"
          }
        },
        "description" : "Created by alexander.yordanov on 2017-10-25."
      },
      "AttachmentSearchResultDTO" : {
        "title" : "AttachmentSearchResultDTO",
        "type" : "object",
        "properties" : {
          "object" : {
            "$ref" : "#/components/schemas/AttachmentDTO"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SearchResultDTO"
        } ]
      },
      "AttachmentsPageDTO" : {
        "title" : "AttachmentsPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AttachmentDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "BMonthDTO" : {
        "title" : "BMonthDTO",
        "type" : "object",
        "properties" : {
          "planned" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "commited" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "actual" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "projected" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "remainig" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "mdf" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "calculated" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "target" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          }
        }
      },
      "BQuarterDTO" : {
        "title" : "BQuarterDTO",
        "type" : "object",
        "properties" : {
          "planned" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "commited" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "actual" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "projected" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "remainig" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "mdf" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "calculated" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          },
          "target" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          }
        },
        "description" : "Quarter budget"
      },
      "BYearDTO" : {
        "title" : "BYearDTO",
        "type" : "object",
        "properties" : {
          "planned" : {
            "type" : "number"
          },
          "commited" : {
            "type" : "number"
          },
          "actual" : {
            "type" : "number"
          },
          "projected" : {
            "type" : "number"
          },
          "remainig" : {
            "type" : "number"
          },
          "mdf" : {
            "type" : "number"
          },
          "target" : {
            "type" : "number"
          },
          "calculated" : {
            "type" : "number"
          }
        }
      },
      "BudgetColumnDTO" : {
        "title" : "BudgetColumnDTO",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "columnType" : {
            "$ref" : "#/components/schemas/ColumnType"
          },
          "width" : {
            "type" : "integer",
            "format" : "int32"
          },
          "order" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dimensionId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "activeColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ColumnOrder"
            }
          },
          "formula" : {
            "type" : "string"
          },
          "positiveFont" : {
            "type" : "string"
          },
          "negativeFont" : {
            "type" : "string"
          },
          "positiveBackground" : {
            "type" : "string"
          },
          "negativeBackground" : {
            "type" : "string"
          },
          "formulaReadable" : {
            "type" : "string"
          }
        },
        "description" : "Created by alexander.yordanov on 2020-05-18."
      },
      "BudgetColumnsDTO" : {
        "title" : "BudgetColumnsDTO",
        "type" : "object",
        "properties" : {
          "month" : {
            "$ref" : "#/components/schemas/BMonthDTO"
          },
          "quarter" : {
            "$ref" : "#/components/schemas/BQuarterDTO"
          },
          "year" : {
            "$ref" : "#/components/schemas/BYearDTO"
          }
        }
      },
      "BudgetScale" : {
        "title" : "BudgetScale",
        "type" : "string",
        "description" : "Created by alexander.yordanov on 2020-05-15.",
        "enum" : [ "NORMAL", "THOUSANDS", "MILLIONS", "BILLIONS" ]
      },
      "BudgetSetDTO" : {
        "title" : "BudgetSetDTO",
        "type" : "object",
        "properties" : {
          "setId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "currencyView" : {
            "$ref" : "#/components/schemas/CurrencyView"
          },
          "budgetScale" : {
            "$ref" : "#/components/schemas/BudgetScale"
          },
          "yearSwitch" : {
            "type" : "boolean"
          },
          "configurationInfo" : {
            "type" : "boolean"
          },
          "rounding" : {
            "type" : "boolean"
          },
          "accesType" : {
            "$ref" : "#/components/schemas/AccessType"
          },
          "budgetColumns" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BudgetColumnDTO"
            }
          }
        },
        "description" : "Created by alexander.yordanov on 2020-05-18."
      },
      "BudgetTreeLock" : {
        "title" : "BudgetTreeLock",
        "required" : [ "yearLocked" ],
        "type" : "object",
        "properties" : {
          "yearLocked" : {
            "type" : "boolean"
          },
          "lockedMonths" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "date-time"
            }
          }
        }
      },
      "CategoryDTO" : {
        "title" : "Category",
        "required" : [ "active" ],
        "type" : "object",
        "properties" : {
          "categoryId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "color" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean",
            "description" : "is active"
          }
        }
      },
      "ColumnOrder" : {
        "title" : "ColumnOrder",
        "type" : "string",
        "enum" : [ "PLANNED", "TARGET_BUDGET", "COMMITED", "ACTUAL", "PROJECTED", "REMAINING", "MDF" ]
      },
      "ColumnType" : {
        "title" : "ColumnType",
        "type" : "string",
        "enum" : [ "YEAR_BUDGET", "MONTH_BUDGET", "CURRENCY", "BUDGET_ANALYSIS", "ELEMENT_ID", "NODE_TYPE", "NODE_NOTES", "RESPONSIBLE_PERSON", "DURATION", "EXTERNAL_ID", "DIMENSION", "FORMULA" ]
      },
      "CreateNodeRequestBody" : {
        "title" : "CreateNodeRequestBody",
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "nodeTypeId" : {
            "type" : "string"
          },
          "info" : {
            "type" : "string"
          },
          "respPerson" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "currencyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "externalId" : {
            "type" : "string"
          }
        }
      },
      "CurrencyDTO" : {
        "title" : "Currency",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "shortName" : {
            "type" : "string"
          },
          "symbol" : {
            "type" : "string"
          }
        }
      },
      "CurrencyPageDTO" : {
        "title" : "CurrencyPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CurrencyDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "CurrencyView" : {
        "title" : "CurrencyView",
        "type" : "string",
        "enum" : [ "WORKING", "REFERENCE" ]
      },
      "DimensionDTO" : {
        "title" : "Dimension",
        "required" : [ "archived", "copyable", "inheritable", "quickFilter", "readOnly", "required" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "info" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/DimensionTypes"
          },
          "readOnly" : {
            "type" : "boolean"
          },
          "required" : {
            "type" : "boolean"
          },
          "copyable" : {
            "type" : "boolean"
          },
          "inheritable" : {
            "type" : "boolean"
          },
          "archived" : {
            "type" : "boolean"
          },
          "quickFilter" : {
            "type" : "boolean"
          }
        }
      },
      "DimensionNodeValueDTO" : {
        "title" : "DimensionNodeValueDTO",
        "type" : "object",
        "properties" : {
          "dimensionId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "dimensionType" : {
            "$ref" : "#/components/schemas/DimensionTypes"
          },
          "values" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DimensionValueDTO"
            }
          }
        }
      },
      "DimensionNodeValueSearchResultDTO" : {
        "title" : "DimensionNodeValueSearchResultDTO",
        "type" : "object",
        "properties" : {
          "object" : {
            "$ref" : "#/components/schemas/DimensionNodeValueDTO"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SearchResultDTO"
        } ]
      },
      "DimensionPageDTO" : {
        "title" : "DimensionPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DimensionDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "DimensionPossibleValueDTO" : {
        "title" : "DimensionPossibleValueDTO",
        "type" : "object",
        "properties" : {
          "parentValueId" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "Created by alexander.yordanov on 2017-01-17.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/DimensionPossibleValueDTOBase"
        } ]
      },
      "DimensionPossibleValueDTOBase" : {
        "title" : "DimensionPossibleValueDTOBase",
        "type" : "object",
        "properties" : {
          "valueId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "value" : {
            "type" : "string"
          }
        },
        "description" : "Created by alexander.yordanov on 2017-01-17."
      },
      "DimensionTypes" : {
        "title" : "DimensionTypes",
        "type" : "string",
        "enum" : [ "TEXT_DIMENSION_TYPE", "M_SELECTABLE_DIMENSION_TYPE", "SELECTABLE_DIMENSION_TYPE", "MW_SELECTABLE_DIMENSION_TYPE", "STRUCTURED_TEXT_DIMENSION_TYPE", "CONTINUES_TEXT_DIMENSION_TYPE" ]
      },
      "DimensionValueDTO" : {
        "title" : "DimensionValue",
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "string"
          },
          "weight" : {
            "type" : "number"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "inherited" : {
            "type" : "boolean"
          }
        }
      },
      "Direction" : {
        "title" : "Direction",
        "type" : "string",
        "description" : "Enumeration for sort directions.",
        "enum" : [ "ASC", "DESC" ]
      },
      "EditMTaskRequestBody" : {
        "title" : "EditMTaskRequestBody",
        "type" : "object",
        "properties" : {
          "responsibleUserId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "markerType" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EditNodeRequestBody" : {
        "title" : "EditNode",
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "externalId" : {
            "type" : "string"
          },
          "nodeName" : {
            "type" : "string"
          },
          "responsiblePerson" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "generalNote" : {
            "type" : "string"
          },
          "currencyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nodeTypeId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "EditTaskRequestBody" : {
        "title" : "EditTaskRequestBody",
        "type" : "object",
        "properties" : {
          "responsibleUser" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "markerType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "state" : {
            "type" : "string"
          },
          "info" : {
            "type" : "string"
          }
        }
      },
      "ElementTypeDTO" : {
        "title" : "ElementTypeDTO",
        "required" : [ "predefined" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fileId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "base64File" : {
            "type" : "string"
          },
          "fileType" : {
            "type" : "string"
          },
          "predefined" : {
            "type" : "boolean"
          }
        }
      },
      "ExchangeRateDTO" : {
        "title" : "ExchangeRateDTO",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "currencyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "referenceCurrencyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "exchangeRate" : {
            "type" : "number"
          },
          "secondExchangeRate" : {
            "type" : "number"
          },
          "units" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "ExchangeRatePageDTO" : {
        "title" : "ExchangeRatePageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExchangeRateDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "FeeDTO" : {
        "title" : "FeeDTO",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/FeeType"
          }
        }
      },
      "FeeNodeRatesDTO" : {
        "title" : "FeeNodeRatesDTO",
        "type" : "object",
        "properties" : {
          "treeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "rates" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/FeeRateDTO"
            }
          },
          "nodeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "feeId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "FeePageDTO" : {
        "title" : "FeePageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeeDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "FeeRateCreateBody" : {
        "title" : "FeeRateCreateBody",
        "type" : "object",
        "properties" : {
          "feeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "rate" : {
            "type" : "number"
          }
        }
      },
      "FeeRateDTO" : {
        "title" : "FeeRateDTO",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "feeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "rate" : {
            "type" : "number"
          }
        }
      },
      "FeeRateEditBody" : {
        "title" : "FeeRateEditBody",
        "type" : "object",
        "properties" : {
          "rate" : {
            "type" : "number"
          }
        }
      },
      "FeeRatePageDTO" : {
        "title" : "FeeRatePageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeeRateDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "FeeType" : {
        "title" : "FeeType",
        "type" : "string",
        "enum" : [ "PERCENT", "ABSOLUTE" ]
      },
      "FeeValueDTO" : {
        "title" : "FeeValueDTO",
        "required" : [ "global" ],
        "type" : "object",
        "properties" : {
          "feeValueId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "feeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nodeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "global" : {
            "type" : "boolean"
          },
          "feeType" : {
            "$ref" : "#/components/schemas/FeeType"
          },
          "feeName" : {
            "type" : "string"
          }
        },
        "description" : "Created by alexander.yordanov on 2020-01-28."
      },
      "FeeValuePageDTO" : {
        "title" : "FeeValuePageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FeeValueDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "GroupDTO" : {
        "title" : "GroupDTO",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "inherit" : {
            "type" : "boolean"
          }
        }
      },
      "GroupRolePair" : {
        "title" : "GroupRolePair",
        "type" : "object",
        "properties" : {
          "groupId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "roleId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "InputStream" : {
        "title" : "InputStream",
        "type" : "object"
      },
      "BillDTO" : {
        "title" : "InvoiceDTO",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "bookingDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "jobNumber" : {
            "type" : "string"
          },
          "costCenter" : {
            "type" : "string"
          },
          "costType" : {
            "type" : "string"
          },
          "responsiblePerson" : {
            "type" : "string"
          },
          "supplier" : {
            "type" : "string"
          },
          "referenceNumber" : {
            "type" : "string"
          },
          "number" : {
            "type" : "string"
          },
          "note" : {
            "type" : "string"
          },
          "paid" : {
            "type" : "boolean"
          },
          "amount" : {
            "type" : "number"
          }
        },
        "description" : "Created by alexander.yordanov on 2017-10-10."
      },
      "BillPageDTO" : {
        "title" : "InvoicePage",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BillDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "BillSearchResultDTO" : {
        "title" : "InvoiceSearchResultDTO",
        "type" : "object",
        "properties" : {
          "object" : {
            "$ref" : "#/components/schemas/BillDTO"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SearchResultDTO"
        } ]
      },
      "KPIDefinitionDTO" : {
        "title" : "KPIDefinitionDTO",
        "required" : [ "archived", "required" ],
        "type" : "object",
        "properties" : {
          "minRate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "maxRate" : {
            "type" : "integer",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "archived" : {
            "type" : "boolean"
          },
          "required" : {
            "type" : "boolean"
          },
          "kpiInfo" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/Type"
          },
          "analysisType" : {
            "$ref" : "#/components/schemas/AnalysisType"
          },
          "value" : {
            "type" : "string",
            "description" : "for 'constant' return value, for 'measurable' return NULL, for 'computed' return formula"
          },
          "kpiSets" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KPISetDTO"
            }
          }
        }
      },
      "KPIDefinitionPageDTO" : {
        "title" : "KPIDefinitionPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/KPIDefinitionDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "KPISetDTO" : {
        "title" : "KPISetDTO",
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "KpiDTO" : {
        "title" : "KpiDTO",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nodeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "kpiDefinitionId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "weight" : {
            "type" : "integer",
            "format" : "int32"
          },
          "target" : {
            "type" : "number"
          },
          "value" : {
            "type" : "number"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "infoText" : {
            "type" : "string"
          }
        }
      },
      "MDFCommentDTO" : {
        "title" : "MDFCommentDTO",
        "type" : "object",
        "properties" : {
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "comment" : {
            "type" : "string"
          }
        }
      },
      "ManageTaskCreateDTO" : {
        "title" : "ManageTaskCreateDTO",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nodeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "jobTypeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "workflowId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "state" : {
            "$ref" : "#/components/schemas/TaskState"
          },
          "markerType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "responsibleUser" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "info" : {
            "type" : "string"
          }
        }
      },
      "MarkerTypeCategoryDTO" : {
        "title" : "MarkerTypeCategoryDTO",
        "required" : [ "predefined" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "active" : {
            "type" : "boolean"
          },
          "predefined" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "MarkerTypeDTO" : {
        "title" : "MarkerTypeDTO",
        "required" : [ "predefined" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "fileId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "categoryId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "active" : {
            "type" : "boolean"
          },
          "predefined" : {
            "type" : "boolean"
          }
        },
        "description" : "Created by alexander.yordanov on 2019-06-19."
      },
      "MarkerTypeRequestBody" : {
        "title" : "MarkerTypeRequestBody",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "categoryId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          },
          "base64File" : {
            "type" : "string"
          },
          "fileType" : {
            "type" : "string"
          }
        },
        "description" : "Created by alexander.yordanov on 2019-11-06."
      },
      "MdfApproveBody" : {
        "title" : "MdfApproveBody",
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "number"
          },
          "comment" : {
            "type" : "string"
          }
        }
      },
      "MdfCommentPageDTO" : {
        "title" : "MdfCommentPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MDFCommentDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "MdfDTO" : {
        "title" : "MdfDTO",
        "type" : "object",
        "properties" : {
          "state" : {
            "$ref" : "#/components/schemas/State"
          },
          "requestDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "approvalRejectedDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "value" : {
            "type" : "number"
          },
          "billId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "attachmentIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "approverUserId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nodeId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "MdfGrantBody" : {
        "title" : "MdfGrantBody",
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "value" : {
            "type" : "number"
          },
          "comment" : {
            "type" : "string"
          }
        }
      },
      "MdfPageDTO" : {
        "title" : "MdfPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/MdfDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "MdfRequestBody" : {
        "title" : "MdfRequestBody",
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "approverUserId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "billId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "comment" : {
            "type" : "string"
          },
          "attachmentIds" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }
      },
      "ModuleDTO" : {
        "title" : "ModuleDTO",
        "required" : [ "canApplyView" ],
        "type" : "object",
        "properties" : {
          "moduleCode" : {
            "type" : "string"
          },
          "canApplyView" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "ModuleLinkRequestBody" : {
        "title" : "ModuleLinkRequestBody",
        "type" : "object",
        "properties" : {
          "moduleCode" : {
            "type" : "string"
          },
          "viewId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "columnSetId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "Month" : {
        "title" : "Month",
        "type" : "string",
        "enum" : [ "JANUARY", "FEBRUARY", "MARCH", "APRIL", "MAY", "JUNE", "JULY", "AUGUST", "SEPTEMBER", "OCTOBER", "NOVEMBER", "DECEMBER" ]
      },
      "NodeDTO" : {
        "title" : "Node",
        "type" : "object",
        "properties" : {
          "parentId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "currencyId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "externalId" : {
            "type" : "string"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "info" : {
            "type" : "string"
          },
          "respPerson" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "leaf" : {
            "type" : "boolean"
          },
          "nodeType" : {
            "$ref" : "#/components/schemas/NodeTypeDTO"
          },
          "nodeTypeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "ancestors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AncestorsDTO"
            }
          }
        }
      },
      "NodeCommentDTO" : {
        "title" : "NodeComment",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nodeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "commentDate" : {
            "type" : "string"
          },
          "comment" : {
            "type" : "string"
          },
          "creator" : {
            "$ref" : "#/components/schemas/UserDTO"
          }
        }
      },
      "NodeCommentPageDTO" : {
        "title" : "NodeCommentPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NodeCommentDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "NodeCommentRequestBody" : {
        "title" : "NodeCommentRequestBody",
        "type" : "object",
        "properties" : {
          "comment" : {
            "type" : "string"
          }
        }
      },
      "NodeCopyRequestBody" : {
        "title" : "NodeCopyRequest",
        "required" : [ "copyAttachments", "copyBudgets", "copyDimensions", "copyFees", "copyGeneralInfo", "copyInvoices", "copyKpis", "copyMarkers", "copyPlanTarget", "copySunkCostBills", "copySunkCosts", "copyTasks", "copyTimelines" ],
        "type" : "object",
        "properties" : {
          "copyTimelines" : {
            "type" : "boolean"
          },
          "copyTasks" : {
            "type" : "boolean"
          },
          "copyMarkers" : {
            "type" : "boolean"
          },
          "copyAttachments" : {
            "type" : "boolean"
          },
          "copyInvoices" : {
            "type" : "boolean"
          },
          "copySunkCosts" : {
            "type" : "boolean"
          },
          "copyBudgets" : {
            "type" : "boolean"
          },
          "copySunkCostBills" : {
            "type" : "boolean"
          },
          "copyPlanTarget" : {
            "type" : "boolean"
          },
          "copyDimensions" : {
            "type" : "boolean"
          },
          "copyKpis" : {
            "type" : "boolean"
          },
          "copyGeneralInfo" : {
            "type" : "boolean"
          },
          "copyFees" : {
            "type" : "boolean"
          }
        }
      },
      "NodeDeeplinkDTO" : {
        "title" : "NodeDeeplinkDTO",
        "type" : "object",
        "properties" : {
          "calendarLink" : {
            "type" : "string"
          },
          "budgetLink" : {
            "type" : "string"
          },
          "node" : {
            "$ref" : "#/components/schemas/NodeDTO"
          }
        }
      },
      "NodePageDTO" : {
        "title" : "NodePageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NodeDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "NodeSearchResultDTO" : {
        "title" : "NodeSearchResultDTO",
        "type" : "object",
        "properties" : {
          "object" : {
            "$ref" : "#/components/schemas/NodeDTO"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SearchResultDTO"
        } ]
      },
      "NodeTypeDTO" : {
        "title" : "NodeTypeDTO",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "colour" : {
            "type" : "string"
          },
          "bold" : {
            "type" : "boolean"
          },
          "italic" : {
            "type" : "boolean"
          },
          "active" : {
            "type" : "boolean"
          },
          "editable" : {
            "type" : "boolean"
          },
          "icon" : {
            "type" : "integer",
            "format" : "int32"
          },
          "backgroundColour" : {
            "type" : "string"
          }
        }
      },
      "PageDTO" : {
        "title" : "PageDTO",
        "required" : [ "limit", "numberOfElements", "offset", "pageNumber", "totalElements" ],
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "format" : "int32"
          },
          "limit" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageNumber" : {
            "type" : "integer",
            "format" : "int32"
          },
          "numberOfElements" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalElements" : {
            "type" : "integer",
            "format" : "int64"
          },
          "sort" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SortOrder"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "@type",
          "mapping" : {
            "annex" : "#/components/schemas/AnnexPeriodPageDTO",
            "attachment" : "#/components/schemas/AttachmentsPageDTO",
            "bill" : "#/components/schemas/BillPageDTO",
            "kpi" : "#/components/schemas/KPIDefinitionPageDTO",
            "mdf" : "#/components/schemas/MdfPageDTO",
            "mdf-comment" : "#/components/schemas/MdfCommentPageDTO",
            "node-comment" : "#/components/schemas/NodeCommentPageDTO",
            "node" : "#/components/schemas/NodePageDTO",
            "search" : "#/components/schemas/SearchResultPageDTO",
            "currency" : "#/components/schemas/CurrencyPageDTO",
            "dimension" : "#/components/schemas/DimensionPageDTO",
            "tree" : "#/components/schemas/TreePageDTO",
            "sunk-cost" : "#/components/schemas/SunkCostPageDTO",
            "task" : "#/components/schemas/TaskPageDTO",
            "user" : "#/components/schemas/UserPageDTO",
            "exchange-rate" : "#/components/schemas/ExchangeRatePageDTO",
            "fee" : "#/components/schemas/FeePageDTO",
            "fee-rate" : "#/components/schemas/FeeRatePageDTO",
            "fee-value" : "#/components/schemas/FeeValuePageDTO",
            "planned-monthly-budget" : "#/components/schemas/PlannedMonthBudgetPageDTO",
            "planned-early-budget" : "#/components/schemas/PlannedYearBudgetPageDTO",
            "target-budget" : "#/components/schemas/TargetBudgetPageDTO"
          }
        }
      },
      "AnnexPeriodDTO" : {
        "title" : "Period",
        "type" : "object",
        "properties" : {
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "categoryId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "PlannedMonthBudgetDTO" : {
        "title" : "PlannedMonthBudgetDTO",
        "required" : [ "initial" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "month" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nodeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "value" : {
            "type" : "number"
          },
          "publishDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "additionalInfo" : {
            "type" : "string"
          },
          "costType" : {
            "type" : "string"
          },
          "initial" : {
            "type" : "boolean"
          }
        },
        "description" : "Created by alexander.yordanov on 2021-02-16."
      },
      "PlannedMonthBudgetPageDTO" : {
        "title" : "PlannedMonthBudgetPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlannedMonthBudgetDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "PlannedYearBudgetDTO" : {
        "title" : "PlannedYearBudgetDTO",
        "required" : [ "initial" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "treeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nodeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "value" : {
            "type" : "number"
          },
          "publishDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "additionalInfo" : {
            "type" : "string"
          },
          "costType" : {
            "type" : "string"
          },
          "initial" : {
            "type" : "boolean"
          }
        },
        "description" : "Created by alexander.yordanov on 2021-02-16."
      },
      "PlannedYearBudgetPageDTO" : {
        "title" : "PlannedYearBudgetPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PlannedYearBudgetDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "PlanningType" : {
        "title" : "PlanningType",
        "type" : "string",
        "enum" : [ "TOP_DOWN", "BOTTOM_UP" ]
      },
      "SUNK_COST_TYPE" : {
        "title" : "SUNK_COST_TYPE",
        "type" : "string",
        "enum" : [ "PURCHASE", "BLANKET", "RELEASE" ]
      },
      "SearchCriteriaDTO" : {
        "title" : "SearchCriteriaDTO",
        "type" : "object",
        "properties" : {
          "types" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "treeId" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "description" : "search criterias\ntypes for search : TIME_LINE, NODE, TASK, INVOICE, ATTACHMENT, SUNK_COST, DIMENSION_VALUE <br>\ntreeid: in which year to execute search. If treeId is NULL will execute for all years."
      },
      "SearchResultDTO" : {
        "title" : "SearchResultDTO",
        "type" : "object",
        "properties" : {
          "nodeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "type" : {
            "$ref" : "#/components/schemas/SearchResultType"
          },
          "ancestors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AncestorsDTO"
            }
          }
        },
        "discriminator" : {
          "propertyName" : "@type",
          "mapping" : {
            "annex-search" : "#/components/schemas/AnnexPeriodSearchResultDTO",
            "attachment-search" : "#/components/schemas/AttachmentSearchResultDTO",
            "bill-search" : "#/components/schemas/BillSearchResultDTO",
            "dimension-search" : "#/components/schemas/DimensionNodeValueSearchResultDTO",
            "node-search" : "#/components/schemas/NodeSearchResultDTO",
            "sunk-cost-search" : "#/components/schemas/SunkCostSearchResultDTO",
            "target-budget-search" : "#/components/schemas/TargetBudgetSearchResultDTO",
            "task-search" : "#/components/schemas/TaskSearchResultDTO"
          }
        }
      },
      "SearchResultPageDTO" : {
        "title" : "SearchResultPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SearchResultDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "SearchResultType" : {
        "title" : "SearchResultType",
        "type" : "string",
        "enum" : [ "TIME_LINE", "NODE", "TASK", "INVOICE", "ATTACHMENT", "SUNK_COST", "MANAGED_TASK", "DIMENSION_VALUE", "TARGET_BUDGET" ]
      },
      "SlideshowDTO" : {
        "title" : "SlideshowDTO",
        "type" : "object",
        "properties" : {
          "slideshowElements" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SlideshowElementDTO"
            }
          },
          "width" : {
            "type" : "string"
          },
          "height" : {
            "type" : "string"
          }
        },
        "description" : "Created by alexander.yordanov on 2018-04-27."
      },
      "SlideshowElementDTO" : {
        "title" : "SlideshowElementDTO",
        "required" : [ "stretched", "video" ],
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "video" : {
            "type" : "boolean"
          },
          "stretched" : {
            "type" : "boolean"
          }
        },
        "description" : "Created by alexander.yordanov on 2018-04-27."
      },
      "Sort" : {
        "title" : "Sort",
        "required" : [ "sorted", "unsorted" ],
        "type" : "object",
        "properties" : {
          "sorted" : {
            "type" : "boolean"
          },
          "unsorted" : {
            "type" : "boolean"
          }
        },
        "description" : "Sort option for queries. You have to provide at least a list of properties to sort for that must not include\nnull or empty strings. The direction defaults to Sort#DEFAULT_DIRECTION."
      },
      "SortOrder" : {
        "title" : "SortOrder",
        "type" : "object",
        "properties" : {
          "property" : {
            "type" : "string"
          },
          "direction" : {
            "$ref" : "#/components/schemas/Direction"
          }
        }
      },
      "SortResource" : {
        "title" : "SortResource",
        "type" : "object",
        "description" : "Sort option for queries. You have to provide at least a list of properties to sort for that must not include\nnull or empty strings. The direction defaults to Sort#DEFAULT_DIRECTION.",
        "allOf" : [ {
          "$ref" : "#/components/schemas/Sort"
        } ]
      },
      "SplitSunkCostDTO" : {
        "title" : "SplitSunkCostDTO",
        "type" : "object",
        "properties" : {
          "totalValueNoAccess" : {
            "type" : "number"
          },
          "totalValue" : {
            "type" : "number"
          },
          "creatorUserId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "inReference" : {
            "type" : "boolean"
          },
          "sunkCosts" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SunkCostDTO"
            }
          },
          "currency" : {
            "$ref" : "#/components/schemas/CurrencyDTO"
          },
          "user" : {
            "$ref" : "#/components/schemas/UserDTO"
          }
        },
        "description" : "Created by alexander.yordanov on 2022-01-26."
      },
      "State" : {
        "title" : "State",
        "type" : "string",
        "enum" : [ "APPROVED", "PENDING", "REJECTED" ]
      },
      "SunkCostDTO" : {
        "title" : "SunkCostDTO",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "splitId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "jobNumber" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number"
          },
          "respPerson" : {
            "type" : "string"
          },
          "info" : {
            "type" : "string"
          },
          "costCenter" : {
            "type" : "string"
          },
          "costType" : {
            "type" : "string"
          },
          "supplier" : {
            "type" : "string"
          },
          "refNumber" : {
            "type" : "string"
          },
          "closed" : {
            "type" : "boolean"
          },
          "type" : {
            "$ref" : "#/components/schemas/SUNK_COST_TYPE"
          },
          "maxValue" : {
            "type" : "number"
          },
          "remainingValue" : {
            "type" : "number"
          },
          "blanketOrderId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nodeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "creatorUserId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "node" : {
            "$ref" : "#/components/schemas/NodeDTO"
          }
        },
        "description" : "Created by alexander.yordanov on 2017-10-10."
      },
      "SunkCostPageDTO" : {
        "title" : "SunkCostPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SunkCostDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "SunkCostSearchResultDTO" : {
        "title" : "SunkCostSearchResultDTO",
        "type" : "object",
        "properties" : {
          "object" : {
            "$ref" : "#/components/schemas/SunkCostDTO"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SearchResultDTO"
        } ]
      },
      "TargetBudgetDTO" : {
        "title" : "TargetBudgetDTO",
        "required" : [ "initial" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "name" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "number"
          },
          "costType" : {
            "type" : "string"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "month" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nodeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "initial" : {
            "type" : "boolean"
          }
        },
        "description" : "Created by alexander.yordanov on 2017-10-10."
      },
      "TargetBudgetPageDTO" : {
        "title" : "TargetBudgetPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TargetBudgetDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "TargetBudgetSearchResultDTO" : {
        "title" : "TargetBudgetSearchResultDTO",
        "type" : "object",
        "properties" : {
          "object" : {
            "$ref" : "#/components/schemas/TargetBudgetDTO"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SearchResultDTO"
        } ]
      },
      "TargetYearBudgetDTO" : {
        "title" : "TargetYearBudgetDTO",
        "required" : [ "initial" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "treeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nodeId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "value" : {
            "type" : "number"
          },
          "publishDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "creationDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "additionalInfo" : {
            "type" : "string"
          },
          "costType" : {
            "type" : "string"
          },
          "initial" : {
            "type" : "boolean"
          }
        },
        "description" : "Created by alexander.yordanov on 2021-02-16."
      },
      "TargetYearBudgetPageDTO" : {
        "title" : "TargetYearBudgetPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TargetYearBudgetDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "TaskDTO" : {
        "title" : "Task",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "date" : {
            "type" : "string",
            "format" : "date-time"
          },
          "state" : {
            "$ref" : "#/components/schemas/TaskState"
          },
          "markerType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "responsibleUser" : {
            "$ref" : "#/components/schemas/UserDTO"
          },
          "info" : {
            "type" : "string"
          },
          "jobId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "nodeId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "TaskPageDTO" : {
        "title" : "TaskPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "TaskSearchResultDTO" : {
        "title" : "TaskSearchResultDTO",
        "type" : "object",
        "properties" : {
          "object" : {
            "$ref" : "#/components/schemas/TaskDTO"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/SearchResultDTO"
        } ]
      },
      "TaskState" : {
        "title" : "TaskState",
        "type" : "string",
        "enum" : [ "OPEN", "DONE", "PLANNED", "PAUSED", "CANCELLED", "IN_PROGRESS" ]
      },
      "TasksRevisionChangesDTO" : {
        "title" : "TasksRevisionChangesDTO",
        "type" : "object",
        "properties" : {
          "revision" : {
            "type" : "integer",
            "format" : "int64"
          },
          "modified" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TaskDTO"
            }
          },
          "deleted" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }
      },
      "TreeDTO" : {
        "title" : "Tree",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "planningType" : {
            "$ref" : "#/components/schemas/PlanningType"
          },
          "startDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "endDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "type" : {
            "$ref" : "#/components/schemas/TreeType"
          },
          "currencyId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "TreePageDTO" : {
        "title" : "TreePageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TreeDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "TreeType" : {
        "title" : "TreeType",
        "type" : "string",
        "enum" : [ "FLEXIBLE", "STRICT" ]
      },
      "Type" : {
        "title" : "Type",
        "type" : "string",
        "enum" : [ "constant", "computed", "measurable" ]
      },
      "UserDTO" : {
        "title" : "User",
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "login" : {
            "type" : "string"
          }
        }
      },
      "UserPageDTO" : {
        "title" : "UserPageDTO",
        "type" : "object",
        "properties" : {
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserDTO"
            }
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PageDTO"
        } ]
      },
      "ViewDTO" : {
        "title" : "ViewDTO",
        "type" : "object",
        "properties" : {
          "viewId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "viewName" : {
            "type" : "string"
          }
        }
      }
    },
    "securitySchemes" : {
      "jwtScheme" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      },
      "basicScheme" : {
        "type" : "http",
        "scheme" : "basic"
      },
      "cookieScheme" : {
        "type" : "apiKey",
        "name" : "JSESSION_ID",
        "in" : "cookie"
      }
    }
  }
}
